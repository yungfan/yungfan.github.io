<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Xcode 14与iOS 16新特性</title>
    <link href="/2022/06/30/Xcode%2014%E4%B8%8EiOS%2016%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <url>/2022/06/30/Xcode%2014%E4%B8%8EiOS%2016%E6%96%B0%E7%89%B9%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="Xcode-14"><a href="#Xcode-14" class="headerlink" title="Xcode 14"></a>Xcode 14</h2><p>在 2022 年 6 月的 WWDC 22 上 Apple 推出了 Xcode 14，相比较 Xcode 13，它的功能与性能都有了巨大的提升。</p><h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><ul><li>Xcode 安装包的大小锐减，安装速度有大幅提升，因为各个平台（iOS、macOS、watchOS、tvOS）的 Components 并没有安装，第一次打开时需要动态下载安装，默认勾选安装的是 iOS 与 macOS。</li><li>创建项目时多个<code>DriveKit</code>菜单，用于开发 iPadOS 的驱动程序。</li><li>创建项目时<code>watchOS</code>菜单中的 Application 选项下将之前的 2 个模版合并成 1 个 App 模版。</li><li>项目的某个 TARGETS 下 General 菜单中的内容发生了变化，不仅调整了顺序，还增加了<code>Supported Destinations</code>与<code>Minimum Deployments</code>。</li><li>工具栏中模拟器前面的图标变成了对应设备的图标。</li><li>Bitcode 被废弃。</li></ul><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>App 的图标只需要提供一张分辨率为 1024 * 1024 像素的图片，Xcode 会自动根据项目的 TARGETS 适配各个平台的图标，同时双击即可弹出面板重新选择图片。</li><li>正在编辑的类型（及其扩展）与其中的属性与方法支持悬浮堆叠显示。</li><li>补齐右侧<code>&#125;</code>时，会自动格式化<code>&#123;&#125;</code>包含的代码块。</li><li><code>Assets.xcassets</code>支持外部拷贝图片粘贴到其中。</li><li>模拟器选择时增加搜索框，当模拟器过多时可以快速搜索。</li><li>Library 中内置 SF Symbols，可以直接拖拽其中的图标到项目中并生成 SwiftUI 代码。</li><li>storyboard 中支持了 iOS 15 中引入的<code>UIKeyboardLayoutGuide</code>。</li><li>重复导入模块时会有明确的警告提示。</li><li>程序报错时错误信息更加精准。</li><li>性能大幅提升，编译、链接、测试、加载文件、切换设备的速度均有明显提升。</li><li>针对每一次编译，可以右击查看编译的时间线。</li><li><strong>Xcode 菜单 —&gt; Window —&gt; Organizer</strong> 中的 Reports 中增加了 Feedback 与 Hangs，帮助开发者发现问题以改进 App。</li></ul><h3 id="代码提示"><a href="#代码提示" class="headerlink" title="代码提示"></a>代码提示</h3><p>Xcode 14 的代码提示功能有了巨大的提升，尤其是代码联想功能。</p><ul><li>支持参数联想，如输入方法名与参数的部分即可联想整个方法或只输入参数部分即可联想整个方法。</li><li>支持类型的成员构造函数提示，只需要输入<code>init</code>即可快速根据声明的属性创建构造函数。</li><li>输入时的提示如果有多个选项时会折叠显示，此时只要点击键盘的<code>—&gt;</code>键即可展开全部。</li><li>调用方法（构造函数）时用<strong>明暗色与斜体</strong>标识参数是否有默认值，如果为暗色斜体表示有默认值。此时如果直接回车，出现的方法（构造函数）仅仅包含没有默认值的参数，如果需要显示全部参数，只需要按住<code>option</code>键再回车即可。</li><li>支持 Codable 协议代码（<code>CodingKeys</code>、<code>init</code>、<code>encode</code>）的快速生成。</li></ul><h2 id="iOS-16"><a href="#iOS-16" class="headerlink" title="iOS 16"></a>iOS 16</h2><p>同样在 WWDC 22 上 Apple 发布了 iOS 16，推出了很多新的内容。在掌握了基于 iOS 15 开发的基础上，只要学习以下的新特性就能轻松过渡到 iOS 16。</p><blockquote><p><strong>运行环境</strong>：Xcode 14.x + iOS 16.x。</p></blockquote><h3 id="Developer-Mode"><a href="#Developer-Mode" class="headerlink" title="Developer Mode"></a>Developer Mode</h3><p>在进行真机调试时需要在设备的<strong>设置（Settings）—&gt; 隐私与安全（Privacy &amp; Security）—&gt; 开发者模式（Developer Mode）</strong> 中打开开发者模式（Developer Mode）。</p><h3 id="UICalendarView"><a href="#UICalendarView" class="headerlink" title="UICalendarView"></a>UICalendarView</h3><ul><li>新增视图，用于显示日历并支持同时选择日历中的一个或多个日期。</li><li>只能显示年月日，无法显示时分秒，如果需要时分秒建议继续使用 UIDatePicker。</li></ul><h4 id="单选"><a href="#单选" class="headerlink" title="单选"></a>单选</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 创建UICalendarView</span><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> calendarView: <span class="hljs-type">UICalendarView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> calendarView <span class="hljs-operator">=</span> <span class="hljs-type">UICalendarView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds)<br>        <span class="hljs-comment">// 背景色</span><br>        calendarView.backgroundColor <span class="hljs-operator">=</span> .white<br>        <span class="hljs-comment">// 渲染色</span><br>        calendarView.tintColor <span class="hljs-operator">=</span> .orange<br>        <span class="hljs-comment">// 日历</span><br>        calendarView.calendar <span class="hljs-operator">=</span> <span class="hljs-type">Calendar</span>(identifier: .chinese)<br>        <span class="hljs-comment">// 本地化</span><br>        calendarView.locale <span class="hljs-operator">=</span> <span class="hljs-type">Locale</span>(identifier: <span class="hljs-string">&quot;zh_Hans_CN&quot;</span>)<br>        <span class="hljs-comment">// 字体</span><br>        calendarView.fontDesign <span class="hljs-operator">=</span> .rounded<br>        <span class="hljs-comment">// 可选择的日期范围</span><br>        calendarView.availableDateRange <span class="hljs-operator">=</span> <span class="hljs-type">DateInterval</span>(start: .now, end: .distantFuture)<br>        <span class="hljs-comment">// 代理</span><br>        calendarView.delegate <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        <span class="hljs-comment">// 日期单选</span><br>        <span class="hljs-keyword">let</span> singleDateSelection <span class="hljs-operator">=</span> <span class="hljs-type">UICalendarSelectionSingleDate</span>(delegate: <span class="hljs-keyword">self</span>)<br>        <span class="hljs-comment">// 选择行为</span><br>        calendarView.selectionBehavior <span class="hljs-operator">=</span> singleDateSelection<br>        <span class="hljs-keyword">return</span> calendarView<br>    &#125;()<br><br>    <span class="hljs-comment">// 用户选择的日期</span><br>    <span class="hljs-keyword">var</span> selectedDate: <span class="hljs-type">DateComponents</span> <span class="hljs-operator">=</span> <span class="hljs-type">DateComponents</span>(year: <span class="hljs-number">39</span>, month: <span class="hljs-number">6</span>, day: <span class="hljs-number">10</span>) &#123;<br>        <span class="hljs-keyword">didSet</span> &#123;<br>            <span class="hljs-comment">// 格式化日期</span><br>            <span class="hljs-keyword">let</span> formatDate <span class="hljs-operator">=</span> <span class="hljs-type">Calendar</span>.current<br>                .date(from: selectedDate)<span class="hljs-operator">?</span><br>                .formatted(.dateTime.year().month().day()<br>                    .locale(<span class="hljs-type">Locale</span>(identifier: <span class="hljs-string">&quot;zh_Hans_CN&quot;</span>)))<br><br>            <span class="hljs-built_in">print</span>(formatDate)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(calendarView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICalendarSelectionSingleDateDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICalendarSelectionSingleDateDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 选择某个日期</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">dateSelection</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">selection</span>: <span class="hljs-type">UICalendarSelectionSingleDate</span>, <span class="hljs-params">didSelectDate</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>?) &#123;<br>        selectedDate <span class="hljs-operator">=</span> dateComponents<span class="hljs-operator">!</span><br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 是否能够选择日期</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">dateSelection</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">selection</span>: <span class="hljs-type">UICalendarSelectionSingleDate</span>, <span class="hljs-params">canSelectDate</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>?) -&gt; <span class="hljs-type">Bool</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICalendarViewDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICalendarViewDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 装饰视图，显示在日历数字下边区域</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">calendarView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">calendarView</span>: <span class="hljs-type">UICalendarView</span>,<br>                      <span class="hljs-params">decorationFor</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>) -&gt; <span class="hljs-type">UICalendarView</span>.<span class="hljs-type">Decoration</span>? &#123;<br>        <span class="hljs-keyword">if</span> dateComponents.year <span class="hljs-operator">==</span> selectedDate.year,<br>           dateComponents.month <span class="hljs-operator">==</span> selectedDate.month,<br>           dateComponents.day <span class="hljs-operator">==</span> selectedDate.day &#123;<br>            <span class="hljs-keyword">return</span> .customView &#123;<br>                <span class="hljs-keyword">let</span> label <span class="hljs-operator">=</span> <span class="hljs-type">UILabel</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0.0</span>, y: <span class="hljs-number">0.0</span>, width: <span class="hljs-number">50.0</span>, height: <span class="hljs-number">30.0</span>))<br>                label.textColor <span class="hljs-operator">=</span> .red<br>                label.font <span class="hljs-operator">=</span> <span class="hljs-type">UIFont</span>.systemFont(ofSize: <span class="hljs-number">10.0</span>)<br>                label.text <span class="hljs-operator">=</span> <span class="hljs-string">&quot;今&quot;</span><br>                <span class="hljs-keyword">return</span> label<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> .default(color: .systemTeal)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="多选"><a href="#多选" class="headerlink" title="多选"></a>多选</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 创建UICalendarView</span><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> calendarView: <span class="hljs-type">UICalendarView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> calendarView <span class="hljs-operator">=</span> <span class="hljs-type">UICalendarView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds)<br>        calendarView.backgroundColor <span class="hljs-operator">=</span> .white<br>        calendarView.tintColor <span class="hljs-operator">=</span> .orange<br>        calendarView.calendar <span class="hljs-operator">=</span> <span class="hljs-type">Calendar</span>(identifier: .chinese)<br>        calendarView.locale <span class="hljs-operator">=</span> <span class="hljs-type">Locale</span>(identifier: <span class="hljs-string">&quot;zh_Hans_CN&quot;</span>)<br>        calendarView.fontDesign <span class="hljs-operator">=</span> .rounded<br>        calendarView.delegate <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        <span class="hljs-comment">// 日期多选</span><br>        <span class="hljs-keyword">let</span> multiDateSelection <span class="hljs-operator">=</span> <span class="hljs-type">UICalendarSelectionMultiDate</span>(delegate: <span class="hljs-keyword">self</span>)<br>        calendarView.selectionBehavior <span class="hljs-operator">=</span> multiDateSelection<br>        <span class="hljs-keyword">return</span> calendarView<br>    &#125;()<br><br>    <span class="hljs-comment">// 用户选择的日期</span><br>    <span class="hljs-keyword">var</span> selectedDates: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">DateComponents</span>&gt; <span class="hljs-operator">=</span> [] &#123;<br>        <span class="hljs-keyword">didSet</span> &#123;<br>            <span class="hljs-comment">// 格式化日期</span><br>            <span class="hljs-keyword">let</span> formatDate <span class="hljs-operator">=</span> selectedDates.compactMap &#123; components <span class="hljs-keyword">in</span><br>                <span class="hljs-type">Calendar</span>.current<br>                    .date(from: components)<span class="hljs-operator">?</span><br>                    .formatted(.dateTime.year().month().day()<br>                        .locale(<span class="hljs-type">Locale</span>(identifier: <span class="hljs-string">&quot;zh_Hans_CN&quot;</span>)))<br>            &#125;<br>            .formatted()<br><br>            <span class="hljs-built_in">print</span>(formatDate)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(calendarView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICalendarSelectionMultiDateDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICalendarSelectionMultiDateDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 选择了日期</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">multiDateSelection</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">selection</span>: <span class="hljs-type">UICalendarSelectionMultiDate</span>, <span class="hljs-params">didSelectDate</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>) &#123;<br>        selectedDates.insert(dateComponents)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 取消选择了日期</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">multiDateSelection</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">selection</span>: <span class="hljs-type">UICalendarSelectionMultiDate</span>, <span class="hljs-params">didDeselectDate</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>) &#123;<br>        selectedDates.remove(dateComponents)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 是否能够选择日期</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">multiDateSelection</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">selection</span>: <span class="hljs-type">UICalendarSelectionMultiDate</span>,<br>                            <span class="hljs-params">canSelectDate</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>) -&gt; <span class="hljs-type">Bool</span> &#123;<br>        <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> day <span class="hljs-operator">=</span> dateComponents.day <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-comment">// 只能选择偶数日</span><br>        <span class="hljs-keyword">return</span> day.isMultiple(of: <span class="hljs-number">2</span>)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 是否能够取消选择日期</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">multiDateSelection</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">selection</span>: <span class="hljs-type">UICalendarSelectionMultiDate</span>,<br>                            <span class="hljs-params">canDeselectDate</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>) -&gt; <span class="hljs-type">Bool</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICalendarViewDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICalendarViewDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 装饰视图，显示在日历数字下边区域</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">calendarView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">calendarView</span>: <span class="hljs-type">UICalendarView</span>, <span class="hljs-params">decorationFor</span> <span class="hljs-params">dateComponents</span>: <span class="hljs-type">DateComponents</span>)<br>        -&gt; <span class="hljs-type">UICalendarView</span>.<span class="hljs-type">Decoration</span>? &#123;<br>        <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> day <span class="hljs-operator">=</span> dateComponents.day <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>        &#125;<br>        <span class="hljs-comment">// 偶数日使用默认装饰</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-operator">!</span>day.isMultiple(of: <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-type">UICalendarView</span>.<span class="hljs-type">Decoration</span>.default(color: .systemGreen, size: .large)<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="UIPasteControl"><a href="#UIPasteControl" class="headerlink" title="UIPasteControl"></a>UIPasteControl</h3><p>通过 UIPasteboard 获取剪贴板中的内容时，系统会弹出对话框提醒用户是否允许粘贴。如果不想显示该对话框，建议使用新增的 UIPasteControl 控件来读取剪贴板的内容。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> textField: <span class="hljs-type">UITextField</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> textField <span class="hljs-operator">=</span> <span class="hljs-type">UITextField</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">20</span>,<br>                                                  y: <span class="hljs-number">200</span>,<br>                                                  width: <span class="hljs-type">UIScreen</span>.main.bounds.width <span class="hljs-operator">-</span> <span class="hljs-number">40</span>,<br>                                                  height: <span class="hljs-number">40</span>))<br>        textField.borderStyle <span class="hljs-operator">=</span> .roundedRect<br>        <span class="hljs-keyword">return</span> textField<br>    &#125;()<br><br>    <span class="hljs-comment">// UIPasteControl</span><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> pasteControl: <span class="hljs-type">UIPasteControl</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-comment">// 创建配置</span><br>        <span class="hljs-keyword">let</span> config <span class="hljs-operator">=</span> <span class="hljs-type">UIPasteControl</span>.<span class="hljs-type">Configuration</span>()<br>        <span class="hljs-comment">// 背景色</span><br>        config.baseBackgroundColor <span class="hljs-operator">=</span> .orange<br>        <span class="hljs-comment">// 图标与文字颜色</span><br>        config.baseForegroundColor <span class="hljs-operator">=</span> .green<br>        <span class="hljs-comment">// 形状</span><br>        config.cornerStyle <span class="hljs-operator">=</span> .capsule<br>        <span class="hljs-comment">// 显示模式</span><br>        config.displayMode <span class="hljs-operator">=</span> .iconAndLabel<br>        <span class="hljs-comment">// 创建UIPasteControl</span><br>        <span class="hljs-keyword">let</span> pasteControl <span class="hljs-operator">=</span> <span class="hljs-type">UIPasteControl</span>(configuration: config)<br>        <span class="hljs-comment">// 设置target，获取剪切板内容后粘贴的位置</span><br>        pasteControl.target <span class="hljs-operator">=</span> textField<br>        pasteControl.frame <span class="hljs-operator">=</span> <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: <span class="hljs-number">0</span>, width: <span class="hljs-number">200</span>, height: <span class="hljs-number">60</span>)<br>        pasteControl.center <span class="hljs-operator">=</span> view.center<br>        <span class="hljs-keyword">return</span> pasteControl<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(textField)<br>        view.addSubview(pasteControl)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：当剪贴板为空时，该按钮处于禁用状态。</p></blockquote><h3 id="UIEditMenuInteraction"><a href="#UIEditMenuInteraction" class="headerlink" title="UIEditMenuInteraction"></a>UIEditMenuInteraction</h3><ul><li>新增的菜单交互，用于取代 UIMenuController 与 UIMenuItem。</li><li>UITextField 与 UITextView 已经默认支持。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> textView: <span class="hljs-type">UITextView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> textView <span class="hljs-operator">=</span> <span class="hljs-type">UITextView</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: <span class="hljs-number">200</span>, width: <span class="hljs-type">UIScreen</span>.main.bounds.width, height: <span class="hljs-number">200</span>))<br>        textView.text <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        在 2022 年 6 月的 WWDC 22 上 Apple 推出了 Xcode 14，相比较 Xcode 13，它的功能与性能都有了巨大的提升。</span><br><span class="hljs-string">        同样在 WWDC 22 上 Apple 发布了 iOS 16，推出了很多新的内容。</span><br><span class="hljs-string">        在掌握了基于 iOS 15 开发的基础上，只要学习以下的新特性就能轻松过渡到 iOS 16。</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        textView.delegate <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        <span class="hljs-keyword">return</span> textView<br>    &#125;()<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> textField: <span class="hljs-type">UITextField</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> textField <span class="hljs-operator">=</span> <span class="hljs-type">UITextField</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: <span class="hljs-number">500</span>, width: <span class="hljs-number">300</span>, height: <span class="hljs-number">44</span>))<br>        textField.borderStyle <span class="hljs-operator">=</span> .roundedRect<br>        textField.delegate <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        <span class="hljs-keyword">return</span> textField<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(textView)<br>        view.addSubview(textField)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UITextViewDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UITextViewDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 通过代理方法添加交互的菜单</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">textView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">textView</span>: <span class="hljs-type">UITextView</span>,<br>                  <span class="hljs-params">editMenuForTextIn</span> <span class="hljs-params">range</span>: <span class="hljs-type">NSRange</span>,<br>                  <span class="hljs-params">suggestedActions</span>: [<span class="hljs-type">UIMenuElement</span>]) -&gt; <span class="hljs-type">UIMenu</span>? &#123;<br>        <span class="hljs-keyword">let</span> favorite <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Favorite&quot;</span>) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;favorite&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> share <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Share&quot;</span>) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;share&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> delete <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Delete&quot;</span>, attributes: [.destructive]) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;delete&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">UIMenu</span>(children: [favorite, share, delete])<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UITextFieldDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UITextFieldDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 通过代理方法添加交互的菜单</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">textField</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">textField</span>: <span class="hljs-type">UITextField</span>,<br>                   <span class="hljs-params">editMenuForCharactersIn</span> <span class="hljs-params">range</span>: <span class="hljs-type">NSRange</span>,<br>                   <span class="hljs-params">suggestedActions</span>: [<span class="hljs-type">UIMenuElement</span>]) -&gt; <span class="hljs-type">UIMenu</span>? &#123;<br>        <span class="hljs-keyword">let</span> favorite <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Favorite&quot;</span>) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;favorite&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> share <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Share&quot;</span>) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;share&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> delete <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Delete&quot;</span>, attributes: [.destructive]) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;delete&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">UIMenu</span>(children: [favorite, share, delete])<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>其他 UIView 增加菜单交互。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> label: <span class="hljs-type">UILabel</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> label <span class="hljs-operator">=</span> <span class="hljs-type">UILabel</span>()<br>        label.text <span class="hljs-operator">=</span> <span class="hljs-string">&quot;UIEditMenuInteraction&quot;</span><br>        label.textAlignment <span class="hljs-operator">=</span> .center<br>        label.sizeToFit()<br>        label.center <span class="hljs-operator">=</span> view.center<br>        label.isUserInteractionEnabled <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment">// 添加UIEditMenuInteraction</span><br>        <span class="hljs-comment">// 可以换成其他支持的UIView</span><br>        label.addInteraction(interaction)<br>        <span class="hljs-comment">// 添加长按手势</span><br>        <span class="hljs-keyword">let</span> longPress <span class="hljs-operator">=</span> <span class="hljs-type">UILongPressGestureRecognizer</span>(target: <span class="hljs-keyword">self</span>, action: <span class="hljs-keyword">#selector</span>(didLongPress))<br>        label.addGestureRecognizer(longPress)<br>        <span class="hljs-keyword">return</span> label<br>    &#125;()<br><br>    <span class="hljs-comment">// 创建UIEditMenuInteraction</span><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> interaction <span class="hljs-operator">=</span> <span class="hljs-type">UIEditMenuInteraction</span>(delegate: <span class="hljs-keyword">self</span>)<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(label)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: - 长按手势响应事件</span><br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">didLongPress</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">recognizer</span>: <span class="hljs-type">UIGestureRecognizer</span>) &#123;<br>        <span class="hljs-keyword">let</span> location <span class="hljs-operator">=</span> recognizer.location(in: view)<br>        <span class="hljs-keyword">let</span> configuration <span class="hljs-operator">=</span> <span class="hljs-type">UIEditMenuConfiguration</span>(identifier: <span class="hljs-literal">nil</span>, sourcePoint: location)<br>        <span class="hljs-comment">// 弹出操作菜单</span><br>        interaction.presentEditMenu(with: configuration)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UIEditMenuInteractionDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIEditMenuInteractionDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 显示位置</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">editMenuInteraction</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">interaction</span>: <span class="hljs-type">UIEditMenuInteraction</span>,<br>                             <span class="hljs-params">targetRectFor</span> <span class="hljs-params">configuration</span>: <span class="hljs-type">UIEditMenuConfiguration</span>) -&gt; <span class="hljs-type">CGRect</span> &#123;<br>        <span class="hljs-comment">// 当前UIView的左侧</span><br>        <span class="hljs-comment">// .zero</span><br>        <span class="hljs-comment">// 当前UIView的中间</span><br>        <span class="hljs-keyword">return</span> label.bounds<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 菜单内容</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">editMenuInteraction</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">interaction</span>: <span class="hljs-type">UIEditMenuInteraction</span>,<br>                             <span class="hljs-params">menuFor</span> <span class="hljs-params">configuration</span>: <span class="hljs-type">UIEditMenuConfiguration</span>,<br>                             <span class="hljs-params">suggestedActions</span>: [<span class="hljs-type">UIMenuElement</span>]) -&gt; <span class="hljs-type">UIMenu</span>? &#123;<br>        <span class="hljs-keyword">let</span> favorite <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Favorite&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;heart.fill&quot;</span>)) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;favorite&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> share <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Share&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;square.and.arrow.up.fill&quot;</span>)) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;share&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> delete <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Delete&quot;</span>,<br>                              image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;trash.fill&quot;</span>),<br>                              attributes: [.destructive]) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;delete&quot;</span>)<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-type">UIMenu</span>(children: [favorite, share, delete])<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 菜单消失</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">editMenuInteraction</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">interaction</span>: <span class="hljs-type">UIEditMenuInteraction</span>,<br>                             <span class="hljs-params">willDismissMenuFor</span> <span class="hljs-params">configuration</span>: <span class="hljs-type">UIEditMenuConfiguration</span>,<br>                             <span class="hljs-params">animator</span>: <span class="hljs-type">UIEditMenuInteractionAnimating</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 菜单显示</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">editMenuInteraction</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">interaction</span>: <span class="hljs-type">UIEditMenuInteraction</span>,<br>                             <span class="hljs-params">willPresentMenuFor</span> <span class="hljs-params">configuration</span>: <span class="hljs-type">UIEditMenuConfiguration</span>,<br>                             <span class="hljs-params">animator</span>: <span class="hljs-type">UIEditMenuInteractionAnimating</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="UIFindInteraction"><a href="#UIFindInteraction" class="headerlink" title="UIFindInteraction"></a>UIFindInteraction</h3><ul><li>新增的查找交互，用于文本内容的查找与替换。</li><li>它会弹出一个查找面板，输入需要搜索的关键字即可进行查找与替换操作。</li><li>UITextView、WKWebView 与 PDFView 已经默认支持，但需要将其<code>isFindInteractionEnabled</code>属性设置为<code>true</code>。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> textView: <span class="hljs-type">UITextView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> textView <span class="hljs-operator">=</span> <span class="hljs-type">UITextView</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: <span class="hljs-number">200</span>, width: <span class="hljs-type">UIScreen</span>.main.bounds.width, height: <span class="hljs-number">600</span>))<br>        textView.text <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        在 2022 年 6 月的 WWDC 22 上 Apple 推出了 Xcode 14，相比较 Xcode 13，它的功能与性能都有了巨大的提升。</span><br><span class="hljs-string">        同样在 WWDC 22 上 Apple 发布了 iOS 16，推出了很多新的内容。</span><br><span class="hljs-string">        在掌握了基于 iOS 15 开发的基础上，只要学习以下的新特性就能轻松过渡到 iOS 16。</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        textView.center <span class="hljs-operator">=</span> view.center<br>        <span class="hljs-comment">// 打开UIFindInteraction</span><br>        textView.isFindInteractionEnabled <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment">// 添加长按手势</span><br>        <span class="hljs-keyword">let</span> longPress <span class="hljs-operator">=</span> <span class="hljs-type">UILongPressGestureRecognizer</span>(target: <span class="hljs-keyword">self</span>, action: <span class="hljs-keyword">#selector</span>(didLongPress))<br>        textView.addGestureRecognizer(longPress)<br>        <span class="hljs-keyword">return</span> textView<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(textView)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 长按手势响应事件</span><br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">didLongPress</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">recognizer</span>: <span class="hljs-type">UIGestureRecognizer</span>) &#123;<br>        <span class="hljs-comment">// 弹出面板</span><br>        textView.findInteraction<span class="hljs-operator">?</span>.presentFindNavigator(showingReplace: <span class="hljs-literal">true</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-comment">// 退出面板</span><br>        textView.findInteraction<span class="hljs-operator">?</span>.dismissFindNavigator()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>其他 UIView 增加查找交互，实现起来较为复杂，需要自己实现查找的效果。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> label: <span class="hljs-type">UILabel</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> label <span class="hljs-operator">=</span> <span class="hljs-type">UILabel</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: <span class="hljs-number">200</span>, width: <span class="hljs-type">UIScreen</span>.main.bounds.width, height: <span class="hljs-number">300</span>))<br>        label.text <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        在 2022 年 6 月的 WWDC 22 上 Apple 推出了 Xcode 14，相比较 Xcode 13，它的功能与性能都有了巨大的提升。</span><br><span class="hljs-string">        同样在 WWDC 22 上 Apple 发布了 iOS 16，推出了很多新的内容。</span><br><span class="hljs-string">        在掌握了基于 iOS 15 开发的基础上，只要学习以下的新特性就能轻松过渡到 iOS 16。</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        label.numberOfLines <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>        label.center <span class="hljs-operator">=</span> view.center<br>        label.isUserInteractionEnabled <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment">// 添加UIFindInteraction</span><br>        <span class="hljs-comment">// 可以换成其他支持的UIView</span><br>        label.addInteraction(interaction)<br>        <span class="hljs-comment">// 添加长按手势</span><br>        <span class="hljs-keyword">let</span> longPress <span class="hljs-operator">=</span> <span class="hljs-type">UILongPressGestureRecognizer</span>(target: <span class="hljs-keyword">self</span>, action: <span class="hljs-keyword">#selector</span>(didLongPress))<br>        label.addGestureRecognizer(longPress)<br>        <span class="hljs-keyword">return</span> label<br>    &#125;()<br><br>    <span class="hljs-comment">// 创建UIFindInteraction</span><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> interaction <span class="hljs-operator">=</span> <span class="hljs-type">UIFindInteraction</span>(sessionDelegate: <span class="hljs-keyword">self</span>)<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(label)<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">var</span> canBecomeFirstResponder: <span class="hljs-type">Bool</span> &#123; <span class="hljs-literal">true</span> &#125;<br><br>    <span class="hljs-comment">// MARK: 长按手势响应事件</span><br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">didLongPress</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">recognizer</span>: <span class="hljs-type">UIGestureRecognizer</span>) &#123;<br>        <span class="hljs-comment">// 弹出面板</span><br>        interaction.presentFindNavigator(showingReplace: <span class="hljs-literal">true</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-comment">// 退出面板</span><br>        interaction.dismissFindNavigator()<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UIFindInteractionDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIFindInteractionDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 开始查找</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">findInteraction</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">interaction</span>: <span class="hljs-type">UIFindInteraction</span>, <span class="hljs-params">didEnd</span> <span class="hljs-params">session</span>: <span class="hljs-type">UIFindSession</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 查找结束</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">findInteraction</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">interaction</span>: <span class="hljs-type">UIFindInteraction</span>, <span class="hljs-params">didBegin</span> <span class="hljs-params">session</span>: <span class="hljs-type">UIFindSession</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 发现内容</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">findInteraction</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">interaction</span>: <span class="hljs-type">UIFindInteraction</span>, <span class="hljs-params">sessionFor</span> <span class="hljs-params">view</span>: <span class="hljs-type">UIView</span>) -&gt; <span class="hljs-type">UIFindSession</span>? &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>        <span class="hljs-comment">// 需要UILabel实现UITextSearching协议</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-type">UITextSearchingFindSession</span>(searchableObject: label)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UITextSearching</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">UILabel</span>: <span class="hljs-title class_">UITextSearching</span> &#123;<br>    <span class="hljs-comment">// MARK: 根据输入的关键字搜索</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">performTextSearch</span>(<span class="hljs-params">queryString</span>: <span class="hljs-type">String</span>,<br>                                  <span class="hljs-params">options</span>: <span class="hljs-type">UITextSearchOptions</span>,<br>                                  <span class="hljs-params">resultAggregator</span>: <span class="hljs-type">UITextSearchAggregator</span>&lt;<span class="hljs-type">AnyHashable</span>?&gt;) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>        <span class="hljs-comment">// 将匹配的文本显示成红色</span><br>        attributedText <span class="hljs-operator">=</span> text<span class="hljs-operator">?</span>.highlight(keyWords: queryString, highlightColor: .systemRed)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 清空搜索框</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">clearAllDecoratedFoundText</span>() &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>        <span class="hljs-comment">// 恢复成黑色文本</span><br>        textColor <span class="hljs-operator">=</span> .black<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">var</span> selectedTextRange: <span class="hljs-type">UITextRange</span>? &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">compare</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">foundRange</span>: <span class="hljs-type">UITextRange</span>, <span class="hljs-params">toRange</span>: <span class="hljs-type">UITextRange</span>, <span class="hljs-params">document</span>: <span class="hljs-type">AnyHashable</span>??) -&gt; <span class="hljs-type">ComparisonResult</span> &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>        <span class="hljs-keyword">return</span> .orderedAscending<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">decorate</span>(<span class="hljs-params">foundTextRange</span>: <span class="hljs-type">UITextRange</span>, <span class="hljs-params">document</span>: <span class="hljs-type">AnyHashable</span>??, <span class="hljs-params">usingStyle</span>: <span class="hljs-type">UITextSearchFoundTextStyle</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">String</span> &#123;<br>    <span class="hljs-comment">// MARK: 高亮显示其中的子串</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">highlight</span>(<span class="hljs-params">keyWords</span>: <span class="hljs-type">String</span>?, <span class="hljs-params">highlightColor</span> <span class="hljs-params">color</span>: <span class="hljs-type">UIColor</span>) -&gt; <span class="hljs-type">NSAttributedString</span> &#123;<br>        <span class="hljs-keyword">let</span> attributeString <span class="hljs-operator">=</span> <span class="hljs-type">NSMutableAttributedString</span>(string: <span class="hljs-keyword">self</span>)<br>        <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> keyWords <span class="hljs-operator">=</span> keyWords <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">return</span> attributeString &#125;<br>        <span class="hljs-keyword">let</span> attribute <span class="hljs-operator">=</span> [<span class="hljs-type">NSAttributedString</span>.<span class="hljs-type">Key</span>.foregroundColor: color]<br>        <span class="hljs-keyword">let</span> ranges <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.ranges(of: keyWords)<br>        <span class="hljs-keyword">for</span> range <span class="hljs-keyword">in</span> ranges &#123;<br>            attributeString.addAttributes(attribute, range: toNSRange(from: range))<br>        &#125;<br>        <span class="hljs-keyword">return</span> attributeString<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: Range转NSRange</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">toNSRange</span>(<span class="hljs-params">from</span> <span class="hljs-params">range</span>: <span class="hljs-type">Range</span>&lt;<span class="hljs-type">String</span>.<span class="hljs-type">Index</span>&gt;) -&gt; <span class="hljs-type">NSRange</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">NSRange</span>(range, in: <span class="hljs-keyword">self</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="LARightStore"><a href="#LARightStore" class="headerlink" title="LARightStore"></a>LARightStore</h3><ul><li>一种受权利保护的数据容器，其中的数据会存储在 keychain 中。</li><li>配合 LARight 进行数据的存取，存取数据时需要经过用户的授权。</li><li>需要导入<code>LocalAuthentication</code>模块。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> LocalAuthentication<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidAppear</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">animated</span>: <span class="hljs-type">Bool</span>) &#123;<br>        <span class="hljs-keyword">super</span>.viewDidAppear(animated)<br><br>        <span class="hljs-comment">// 存储</span><br>        <span class="hljs-type">Task</span> &#123;<br>            <span class="hljs-keyword">let</span> carID <span class="hljs-operator">=</span> <span class="hljs-string">&quot;6270123456789000&quot;</span><br>            <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> carID.data(using: .utf8)<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> data &#123;<br>                <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> storeData(data)<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-comment">// 获取</span><br>        <span class="hljs-type">Task</span> &#123;<br>            <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> fetchData()<br>            <span class="hljs-built_in">print</span>(<span class="hljs-type">String</span>(decoding: data, as: <span class="hljs-type">UTF8</span>.<span class="hljs-keyword">self</span>))<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewWillDisappear</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">animated</span>: <span class="hljs-type">Bool</span>) &#123;<br>        <span class="hljs-keyword">super</span>.viewWillDisappear(animated)<br><br>        <span class="hljs-comment">// 解除授权</span><br>        <span class="hljs-type">Task</span> &#123;<br>            <span class="hljs-keyword">let</span> loginRight <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> <span class="hljs-type">LARightStore</span>.shared.right(forIdentifier: <span class="hljs-string">&quot;bank-card&quot;</span>)<br>            <span class="hljs-keyword">await</span> loginRight.deauthorize()<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 存储数据</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">storeData</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">data</span>: <span class="hljs-type">Data</span>) <span class="hljs-keyword">async</span> <span class="hljs-keyword">throws</span> &#123;<br>        <span class="hljs-comment">// 1. 创建LARight</span><br>        <span class="hljs-keyword">let</span> loginRight <span class="hljs-operator">=</span> <span class="hljs-type">LARight</span>()<br>        <span class="hljs-comment">// 2. 请求授权，弹出验证信息，通过TouchID、FaceID或密码验证</span><br>        <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> loginRight.authorize(localizedReason: <span class="hljs-string">&quot;用户需要向keychain中存储敏感数据&quot;</span>)<br>        <span class="hljs-comment">// 3. 存储数据</span><br>        <span class="hljs-keyword">_</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> <span class="hljs-type">LARightStore</span>.shared.saveRight(loginRight, identifier: <span class="hljs-string">&quot;bank-card&quot;</span>, secret: data)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 获取数据</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">fetchData</span>() <span class="hljs-keyword">async</span> <span class="hljs-keyword">throws</span> -&gt; <span class="hljs-type">Data</span> &#123;<br>        <span class="hljs-comment">// 1. 获取LARight</span><br>        <span class="hljs-keyword">let</span> loginRight <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> <span class="hljs-type">LARightStore</span>.shared.right(forIdentifier: <span class="hljs-string">&quot;bank-card&quot;</span>)<br>        <span class="hljs-comment">// 2. 请求授权</span><br>        <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> loginRight.authorize(localizedReason: <span class="hljs-string">&quot;用户需要从keychain中获取敏感数据&quot;</span>)<br>        <span class="hljs-comment">// 3. 获取数据</span><br>        <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-keyword">await</span> loginRight.secret.rawData<br>        <span class="hljs-keyword">return</span> data<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="UIImage"><a href="#UIImage" class="headerlink" title="UIImage"></a>UIImage</h3><ul><li>SF Symbols 中增加了新的类别 Variable，其中的图标支持可变渲染。</li><li>UIImage 相应地增加了新的构造函数支持可变渲染。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> Combine<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 可变色度</span><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> variable: <span class="hljs-type">Double</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">didSet</span> &#123;<br>            <span class="hljs-comment">// 新的构造函数，支持可变渲染</span><br>            <span class="hljs-keyword">let</span> image <span class="hljs-operator">=</span> <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;touchid&quot;</span>, variableValue: variable, configuration: symbolConfig)<br>            imageView.image <span class="hljs-operator">=</span> image<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 配置图标的渲染颜色</span><br>    <span class="hljs-keyword">let</span> symbolConfig <span class="hljs-operator">=</span> <span class="hljs-type">UIImage</span>.<span class="hljs-type">SymbolConfiguration</span>(paletteColors: [.systemTeal, .systemGreen])<br>    <span class="hljs-keyword">var</span> cancellables: [<span class="hljs-type">AnyCancellable</span>] <span class="hljs-operator">=</span> []<br>    <span class="hljs-comment">// Combine定时器</span><br>    <span class="hljs-keyword">let</span> timer <span class="hljs-operator">=</span> <span class="hljs-type">Timer</span>.publish(every: <span class="hljs-number">0.2</span>, on: .main, in: .common)<br>    <br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> imageView: <span class="hljs-type">UIImageView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> imageView <span class="hljs-operator">=</span> <span class="hljs-type">UIImageView</span>(image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;touchid&quot;</span>, variableValue: <span class="hljs-number">0</span>, configuration: symbolConfig))<br>        imageView.frame <span class="hljs-operator">=</span> <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: <span class="hljs-number">0</span>, width: <span class="hljs-number">100</span>, height: <span class="hljs-number">100</span>)<br>        imageView.contentMode <span class="hljs-operator">=</span> .scaleAspectFit<br>        imageView.center <span class="hljs-operator">=</span> view.center<br>        <span class="hljs-keyword">return</span> imageView<br>    &#125;()<br>    <br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(imageView)<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-comment">// 动态调整Variable图标</span><br>        timer<br>            .autoconnect()<br>            .sink &#123; [<span class="hljs-keyword">weak</span> <span class="hljs-keyword">self</span>] <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> <span class="hljs-keyword">self</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span> <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">return</span> &#125;<br>                <span class="hljs-keyword">switch</span> <span class="hljs-keyword">self</span>.variable &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.2</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.4</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.4</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.6</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.6</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.8</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">1.0</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">1.0</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.9</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.9</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.7</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.7</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.5</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.3</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0.3</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><br>                <span class="hljs-keyword">default</span>:<br>                    <span class="hljs-keyword">self</span>.variable <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>                &#125;<br>            &#125;<br>            .store(in: <span class="hljs-operator">&amp;</span>cancellables)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="UIPageControl"><a href="#UIPageControl" class="headerlink" title="UIPageControl"></a>UIPageControl</h3><ul><li>默认为水平方向显示，支持<strong>从左到右</strong>与<strong>从右到左</strong>。</li><li>支持垂直方向显示，也分为<strong>从上到下</strong>与<strong>从下到上</strong>。</li><li>可以设置指示器与当前页的图片。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> pageControl: <span class="hljs-type">UIPageControl</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> pageControl <span class="hljs-operator">=</span> <span class="hljs-type">UIPageControl</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: <span class="hljs-number">0</span>, width: <span class="hljs-number">200</span>, height: <span class="hljs-number">500</span>))<br>        pageControl.center <span class="hljs-operator">=</span> view.center<br>        pageControl.numberOfPages <span class="hljs-operator">=</span> <span class="hljs-number">6</span><br>        <span class="hljs-comment">// 设置方向</span><br>        pageControl.direction <span class="hljs-operator">=</span> .bottomToTop<br>        <span class="hljs-comment">// 指示器的图片</span><br>        pageControl.preferredIndicatorImage <span class="hljs-operator">=</span> <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;star&quot;</span>)<span class="hljs-operator">?</span><br>            .withTintColor(.red, renderingMode: .alwaysOriginal)<br>        <span class="hljs-comment">// 当前页的图片</span><br>        pageControl.preferredCurrentPageIndicatorImage <span class="hljs-operator">=</span> <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;star.fill&quot;</span>)<span class="hljs-operator">?</span><br>            .withTintColor(.red, renderingMode: .alwaysOriginal)<br>        <span class="hljs-keyword">return</span> pageControl<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(pageControl)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="UITableView"><a href="#UITableView" class="headerlink" title="UITableView"></a>UITableView</h3><ul><li>增加了新的属性<code>selfSizingInvalidation</code>，通过它 UITableViewCell 具备自动调整大小的能力。<ul><li>自动布局时，需要将属性<code>selfSizingInvalidation</code>设置为<code>SelfSizingInvalidation.enabledIncludingConstraints</code>。</li><li>手动方式时，需要调用 UITableViewCell 的<code>invalidateIntrinsicContentSize()</code>方法。</li></ul></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-comment">// MARK: - Model</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">WWDCModel</span> &#123;<br>    <span class="hljs-keyword">let</span> info: <span class="hljs-type">String</span><br>    <span class="hljs-keyword">let</span> detail: <span class="hljs-type">String</span><br>&#125;<br><br><span class="hljs-comment">// MARK: - UITableViewCell</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SelfResizingTableViewCell</span>: <span class="hljs-title class_">UITableViewCell</span> &#123;<br>    <span class="hljs-comment">// 短文本</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> shortText: <span class="hljs-type">String</span>?<br>    <span class="hljs-comment">// 长文本</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> longText: <span class="hljs-type">String</span>?<br>    <span class="hljs-comment">// 切换显示</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> toggle <span class="hljs-operator">=</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> label: <span class="hljs-type">UILabel</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> label <span class="hljs-operator">=</span> <span class="hljs-type">UILabel</span>()<br>        label.text <span class="hljs-operator">=</span> shortText<br>        label.numberOfLines <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>        label.backgroundColor <span class="hljs-operator">=</span> .red<br>        label.isUserInteractionEnabled <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        label.translatesAutoresizingMaskIntoConstraints <span class="hljs-operator">=</span> <span class="hljs-literal">false</span><br>        label.addGestureRecognizer(<span class="hljs-type">UITapGestureRecognizer</span>(target: <span class="hljs-keyword">self</span>, action: <span class="hljs-keyword">#selector</span>(handleTap)))<br>        <span class="hljs-keyword">return</span> label<br>    &#125;()<br><br>    <span class="hljs-keyword">var</span> model: <span class="hljs-type">WWDCModel</span>? &#123;<br>        <span class="hljs-keyword">willSet</span>(model) &#123;<br>            longText <span class="hljs-operator">=</span> model<span class="hljs-operator">?</span>.info<br>            shortText <span class="hljs-operator">=</span> model<span class="hljs-operator">?</span>.detail<br>            label.text <span class="hljs-operator">=</span> model<span class="hljs-operator">?</span>.info<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">init</span>(<span class="hljs-params">style</span>: <span class="hljs-type">UITableViewCell</span>.<span class="hljs-type">CellStyle</span>, <span class="hljs-params">reuseIdentifier</span>: <span class="hljs-type">String</span>?) &#123;<br>        <span class="hljs-keyword">super</span>.<span class="hljs-keyword">init</span>(style: style, reuseIdentifier: reuseIdentifier)<br><br>        contentView.addSubview(label)<br>    &#125;<br><br>    <span class="hljs-keyword">required</span> <span class="hljs-keyword">init?</span>(<span class="hljs-params">coder</span>: <span class="hljs-type">NSCoder</span>) &#123;<br>        <span class="hljs-built_in">fatalError</span>(<span class="hljs-string">&quot;init(coder:) has not been implemented&quot;</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">layoutSubviews</span>() &#123;<br>        <span class="hljs-keyword">super</span>.layoutSubviews()<br><br>        <span class="hljs-comment">// 设置布局</span><br>        <span class="hljs-type">NSLayoutConstraint</span>.activate([<br>            label.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: <span class="hljs-number">2</span>),<br>            label.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: <span class="hljs-operator">-</span><span class="hljs-number">10</span>),<br>            label.topAnchor.constraint(equalTo: contentView.topAnchor, constant: <span class="hljs-number">10</span>),<br>            label.bottomAnchor.constraint(equalTo: contentView.bottomAnchor, constant: <span class="hljs-operator">-</span><span class="hljs-number">10</span>)])<br>    &#125;<br><br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">handleTap</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">gestureRecognizer</span>: <span class="hljs-type">UIGestureRecognizer</span>) &#123;<br>        toggle.toggle()<br><br>        <span class="hljs-keyword">if</span> toggle &#123;<br>            <span class="hljs-comment">// 默认有动画效果</span><br>            label.text <span class="hljs-operator">=</span> longText<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 不带动画效果</span><br>            <span class="hljs-type">UIView</span>.performWithoutAnimation &#123;<br>                <span class="hljs-comment">// 手动触发调整大小操作</span><br>                <span class="hljs-keyword">self</span>.invalidateIntrinsicContentSize()<br>                label.text <span class="hljs-operator">=</span> shortText<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UIViewController</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> tableView: <span class="hljs-type">UITableView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> tableView <span class="hljs-operator">=</span> <span class="hljs-type">UITableView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds)<br>        tableView.dataSource <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        tableView.register(<span class="hljs-type">SelfResizingTableViewCell</span>.<span class="hljs-keyword">self</span>, forCellReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>)<br>        <span class="hljs-comment">// 设置selfSizingInvalidation</span><br>        tableView.selfSizingInvalidation <span class="hljs-operator">=</span> .enabledIncludingConstraints<br>        <span class="hljs-keyword">return</span> tableView<br>    &#125;()<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> model <span class="hljs-operator">=</span> <span class="hljs-type">WWDCModel</span>(info: <span class="hljs-string">&quot;WWDC22&quot;</span>, detail: <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    在 WWDC 22 上 Apple 推出了 Xcode 14，相比较 Xcode 13，它的功能与性能都有了巨大的提升。</span><br><span class="hljs-string">    同样在 WWDC 22 上 Apple 发布了 iOS 16，推出了很多新的内容。</span><br><span class="hljs-string">    在掌握了基于 iOS 15 开发的基础上，只要学习以下的新特性就能轻松过渡到 iOS 16。</span><br><span class="hljs-string">    &quot;&quot;&quot;</span>)<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(tableView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UITableViewDataSource</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UITableViewDataSource</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">numberOfRowsInSection</span> <span class="hljs-params">section</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">5</span><br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">cellForRowAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">UITableViewCell</span> &#123;<br>        <span class="hljs-keyword">let</span> cell <span class="hljs-operator">=</span> tableView.dequeueReusableCell(withIdentifier: <span class="hljs-string">&quot;abc&quot;</span>, for: indexPath) <span class="hljs-keyword">as!</span> <span class="hljs-type">SelfResizingTableViewCell</span><br>        cell.model <span class="hljs-operator">=</span> model<br>        <span class="hljs-keyword">return</span> cell<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>增加了 2 个新的代理方法<code>tableView(_ tableView: UITableView, canPerformPrimaryActionForRowAt indexPath: IndexPath) -&gt; Bool</code>与<code>tableView(_ tableView: UITableView, performPrimaryActionForRowAt indexPath: IndexPath)</code>，可以控制哪些 IndexPath 可以执行对应的操作。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 设备名</span><br>    <span class="hljs-keyword">let</span> devices <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iPhone&quot;</span>, <span class="hljs-string">&quot;iPad&quot;</span>, <span class="hljs-string">&quot;Mac Mini&quot;</span>, <span class="hljs-string">&quot;MacBook Pro&quot;</span>, <span class="hljs-string">&quot;iMac&quot;</span>, <span class="hljs-string">&quot;Mac Pro&quot;</span>, <span class="hljs-string">&quot;Apple TV&quot;</span>, <span class="hljs-string">&quot;Apple Watch&quot;</span>,<br>                   <span class="hljs-string">&quot;HomePod&quot;</span>, <span class="hljs-string">&quot;AirPods Pro&quot;</span>, <span class="hljs-string">&quot;AirPods&quot;</span>, <span class="hljs-string">&quot;iPod&quot;</span>, <span class="hljs-string">&quot;Magic Keyboard&quot;</span>, <span class="hljs-string">&quot;iPod Touch&quot;</span>, <span class="hljs-string">&quot;Display&quot;</span>]<br>    <span class="hljs-comment">// 设备图片</span><br>    <span class="hljs-keyword">let</span> images <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iphone&quot;</span>, <span class="hljs-string">&quot;ipad&quot;</span>, <span class="hljs-string">&quot;macmini&quot;</span>, <span class="hljs-string">&quot;laptopcomputer&quot;</span>, <span class="hljs-string">&quot;desktopcomputer&quot;</span>, <span class="hljs-string">&quot;macpro.gen3&quot;</span>, <span class="hljs-string">&quot;appletv&quot;</span>,<br>                  <span class="hljs-string">&quot;applewatch&quot;</span>, <span class="hljs-string">&quot;homepod.2&quot;</span>, <span class="hljs-string">&quot;airpodspro&quot;</span>, <span class="hljs-string">&quot;airpods&quot;</span>, <span class="hljs-string">&quot;ipod&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>, <span class="hljs-string">&quot;ipodtouch&quot;</span>, <span class="hljs-string">&quot;display&quot;</span>]<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> tableView: <span class="hljs-type">UITableView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> tableView <span class="hljs-operator">=</span> <span class="hljs-type">UITableView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds, style: .plain)<br>        tableView.dataSource <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        tableView.delegate <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        tableView.rowHeight <span class="hljs-operator">=</span> <span class="hljs-number">80.0</span><br>        tableView.register(<span class="hljs-type">UITableViewCell</span>.<span class="hljs-keyword">self</span>, forCellReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>)<br>        <span class="hljs-keyword">return</span> tableView<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(tableView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UITableViewDataSource</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UITableViewDataSource</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">numberOfRowsInSection</span> <span class="hljs-params">section</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        <span class="hljs-keyword">return</span> devices.count<br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">cellForRowAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">UITableViewCell</span> &#123;<br>        <span class="hljs-keyword">let</span> cell <span class="hljs-operator">=</span> tableView.dequeueReusableCell(withIdentifier: <span class="hljs-string">&quot;abc&quot;</span>, for: indexPath)<br>        cell.textLabel<span class="hljs-operator">?</span>.text <span class="hljs-operator">=</span> devices[indexPath.row]<br>        cell.imageView<span class="hljs-operator">?</span>.image <span class="hljs-operator">=</span> <span class="hljs-type">UIImage</span>(systemName: images[indexPath.row])<br><br>        <span class="hljs-keyword">return</span> cell<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UITableViewDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UITableViewDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 决定performPrimaryActionForRowAt()方法能否调用</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">canPerformPrimaryActionForRowAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">Bool</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 点击时调用，在didSelectRow()方法之后执行</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">performPrimaryActionForRowAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">didSelectRowAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在使用 Cell Content Configuration 时，UITableViewCell 增加了<code>defaultBackgroundConfiguration()</code>方法获取默认的背景配置，同时其<code>contentConfiguration</code>属性增加了 UIHostingConfiguration 类型，支持使用 SwiftUI 定义 UITableViewCell 的内容。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 设备名</span><br>    <span class="hljs-keyword">var</span> devices <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iPhone&quot;</span>, <span class="hljs-string">&quot;iPad&quot;</span>, <span class="hljs-string">&quot;Mac Mini&quot;</span>, <span class="hljs-string">&quot;MacBook Pro&quot;</span>, <span class="hljs-string">&quot;iMac&quot;</span>, <span class="hljs-string">&quot;Mac Pro&quot;</span>, <span class="hljs-string">&quot;Apple TV&quot;</span>, <span class="hljs-string">&quot;Apple Watch&quot;</span>,<br>                   <span class="hljs-string">&quot;HomePod&quot;</span>, <span class="hljs-string">&quot;AirPods Pro&quot;</span>, <span class="hljs-string">&quot;AirPods&quot;</span>, <span class="hljs-string">&quot;iPod&quot;</span>, <span class="hljs-string">&quot;Magic Keyboard&quot;</span>, <span class="hljs-string">&quot;iPod Touch&quot;</span>, <span class="hljs-string">&quot;Display&quot;</span>]<br>    <span class="hljs-comment">// 设备图片</span><br>    <span class="hljs-keyword">var</span> images <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iphone&quot;</span>, <span class="hljs-string">&quot;ipad&quot;</span>, <span class="hljs-string">&quot;macmini&quot;</span>, <span class="hljs-string">&quot;laptopcomputer&quot;</span>, <span class="hljs-string">&quot;desktopcomputer&quot;</span>, <span class="hljs-string">&quot;macpro.gen3&quot;</span>, <span class="hljs-string">&quot;appletv&quot;</span>,<br>                  <span class="hljs-string">&quot;applewatch&quot;</span>, <span class="hljs-string">&quot;homepod.2&quot;</span>, <span class="hljs-string">&quot;airpodspro&quot;</span>, <span class="hljs-string">&quot;airpods&quot;</span>, <span class="hljs-string">&quot;ipod&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>, <span class="hljs-string">&quot;ipodtouch&quot;</span>, <span class="hljs-string">&quot;display&quot;</span>]<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> tableView: <span class="hljs-type">UITableView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> tableView <span class="hljs-operator">=</span> <span class="hljs-type">UITableView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds, style: .plain)<br>        tableView.dataSource <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        tableView.register(<span class="hljs-type">UITableViewCell</span>.<span class="hljs-keyword">self</span>, forCellReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>)<br>        <span class="hljs-keyword">return</span> tableView<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(tableView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UITableViewDataSource</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UITableViewDataSource</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">numberOfRowsInSection</span> <span class="hljs-params">section</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        <span class="hljs-keyword">return</span> devices.count<br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">tableView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">tableView</span>: <span class="hljs-type">UITableView</span>, <span class="hljs-params">cellForRowAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">UITableViewCell</span> &#123;<br>        <span class="hljs-keyword">let</span> cell <span class="hljs-operator">=</span> tableView.dequeueReusableCell(withIdentifier: <span class="hljs-string">&quot;abc&quot;</span>, for: indexPath)<br>        <span class="hljs-comment">// 设置内容</span><br>        <span class="hljs-comment">// 使用UIHostingConfiguration支持嵌入SwiftUI</span><br>        cell.contentConfiguration <span class="hljs-operator">=</span> <span class="hljs-type">UIHostingConfiguration</span> &#123;<br>            <span class="hljs-type">HStack</span> &#123;<br>                <span class="hljs-type">Image</span>(systemName: images[indexPath.row])<br><br>                <span class="hljs-type">Text</span>(devices[indexPath.row])<br>                    .font(.title2)<br><br>                <span class="hljs-type">Spacer</span>()<br><br>                <span class="hljs-type">Image</span>(systemName: <span class="hljs-string">&quot;info.bubble&quot;</span>)<br>            &#125;<br>            .foregroundStyle(.teal)<br>            .swipeActions(edge: .trailing) &#123; <span class="hljs-comment">// 侧滑菜单</span><br>                <span class="hljs-comment">// 菜单一</span><br>                <span class="hljs-type">Button</span>(<span class="hljs-string">&quot;删除&quot;</span>, role: .destructive) &#123;<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;删除数据&quot;</span>)<br>                    <span class="hljs-keyword">self</span>.devices.remove(at: indexPath.row)<br>                    <span class="hljs-keyword">self</span>.images.remove(at: indexPath.row)<br>                    <span class="hljs-keyword">self</span>.tableView.reloadData()<br>                &#125;<br><br>                <span class="hljs-comment">// 菜单二</span><br>                <span class="hljs-type">Button</span>(<span class="hljs-string">&quot;增加&quot;</span>) &#123;<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;增加数据&quot;</span>)<br>                    <span class="hljs-keyword">self</span>.devices.insert(<span class="hljs-string">&quot;iPhone 14&quot;</span>, at: <span class="hljs-number">0</span>)<br>                    <span class="hljs-keyword">self</span>.images.insert(<span class="hljs-string">&quot;iphone&quot;</span>, at: <span class="hljs-number">0</span>)<br>                    <span class="hljs-keyword">self</span>.tableView.reloadData()<br>                &#125;<br>                .tint(.green)<br>            &#125;<br>        &#125;<br>        .margins(.vertical, <span class="hljs-number">20</span>) <span class="hljs-comment">// 上下边距</span><br>        .background(.orange) <span class="hljs-comment">// 背景</span><br><br>        <span class="hljs-comment">// 设置背景一</span><br>        <span class="hljs-keyword">var</span> background1 <span class="hljs-operator">=</span> <span class="hljs-type">UIBackgroundConfiguration</span>.listPlainCell()<br>        background1.backgroundColor <span class="hljs-operator">=</span> .systemPurple<br>        background1.cornerRadius <span class="hljs-operator">=</span> <span class="hljs-number">8</span><br>        cell.backgroundConfiguration <span class="hljs-operator">=</span> background1<br>        <span class="hljs-comment">// 设置背景二</span><br>        <span class="hljs-keyword">var</span> background2 <span class="hljs-operator">=</span> cell.defaultBackgroundConfiguration()<br>        background2.backgroundColor <span class="hljs-operator">=</span> .systemRed<br>        background2.cornerRadius <span class="hljs-operator">=</span> <span class="hljs-number">8</span><br>        cell.backgroundConfiguration <span class="hljs-operator">=</span> background2<br>        <br>        <span class="hljs-keyword">return</span> cell<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：设置背景的优先级：<code>UIBackgroundConfiguration.listPlainCell()</code>&gt;<code>.background</code>，<code>.background</code>&gt;<code>cell.defaultBackgroundConfiguration()</code>，三者同时使用时又和<code>UIBackgroundConfiguration.listPlainCell()</code>与<code>cell.defaultBackgroundConfiguration()</code>顺序有关系。</p></blockquote><ul><li>用于显示 Context Menus 的代理方法<code>tableView(_ tableView: UITableView,              contextMenuConfigurationForRowAt indexPath: IndexPath, point: CGPoint) -&gt; UIContextMenuConfiguration?</code>被废弃，替换为<code>tableView(_ tableView: UITableView,              contextMenuConfigurationForRowAt indexPaths: [IndexPath], point: CGPoint) -&gt; UIContextMenuConfiguration?)</code>。</li></ul><h3 id="UICollectionView"><a href="#UICollectionView" class="headerlink" title="UICollectionView"></a>UICollectionView</h3><ul><li>类似于 UITableView，也增加了新的属性<code>selfSizingInvalidation</code>，通过它 UICollectionViewCell 同样具备自动调整大小的能力。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-comment">// MARK: - Model</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">WWDCModel</span> &#123;<br>    <span class="hljs-keyword">let</span> info: <span class="hljs-type">String</span><br>    <span class="hljs-keyword">let</span> detail: <span class="hljs-type">String</span><br>&#125;<br><br><span class="hljs-comment">// MARK: - UICollectionViewCell</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SelfResizingCollectionViewCell</span>: <span class="hljs-title class_">UICollectionViewCell</span> &#123;<br>    <span class="hljs-comment">// 短文本</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> shortText: <span class="hljs-type">String</span>?<br>    <span class="hljs-comment">// 长文本</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> longText: <span class="hljs-type">String</span>?<br>    <span class="hljs-comment">// 切换显示</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> toggle <span class="hljs-operator">=</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> label: <span class="hljs-type">UILabel</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> label <span class="hljs-operator">=</span> <span class="hljs-type">UILabel</span>()<br>        label.text <span class="hljs-operator">=</span> shortText<br>        label.numberOfLines <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>        label.translatesAutoresizingMaskIntoConstraints <span class="hljs-operator">=</span> <span class="hljs-literal">false</span><br>        <span class="hljs-keyword">return</span> label<br>    &#125;()<br><br>    <span class="hljs-keyword">var</span> model: <span class="hljs-type">WWDCModel</span>? &#123;<br>        <span class="hljs-keyword">willSet</span>(model) &#123;<br>            longText <span class="hljs-operator">=</span> model<span class="hljs-operator">?</span>.info<br>            shortText <span class="hljs-operator">=</span> model<span class="hljs-operator">?</span>.detail<br>            label.text <span class="hljs-operator">=</span> model<span class="hljs-operator">?</span>.info<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">init</span>(<span class="hljs-params">frame</span>: <span class="hljs-type">CGRect</span>) &#123;<br>        <span class="hljs-keyword">super</span>.<span class="hljs-keyword">init</span>(frame: frame)<br><br>        contentView.addSubview(label)<br>    &#125;<br><br>    <span class="hljs-keyword">required</span> <span class="hljs-keyword">init?</span>(<span class="hljs-params">coder</span>: <span class="hljs-type">NSCoder</span>) &#123;<br>        <span class="hljs-built_in">fatalError</span>(<span class="hljs-string">&quot;init(coder:) has not been implemented&quot;</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">layoutSubviews</span>() &#123;<br>        <span class="hljs-keyword">super</span>.layoutSubviews()<br><br>        <span class="hljs-comment">// 设置布局</span><br>        <span class="hljs-type">NSLayoutConstraint</span>.activate([<br>            label.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: <span class="hljs-number">10</span>),<br>            label.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: <span class="hljs-operator">-</span><span class="hljs-number">10</span>),<br>            label.topAnchor.constraint(equalTo: contentView.topAnchor, constant: <span class="hljs-number">10</span>),<br>            label.bottomAnchor.constraint(equalTo: contentView.bottomAnchor, constant: <span class="hljs-operator">-</span><span class="hljs-number">10</span>)])<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        toggle.toggle()<br><br>        <span class="hljs-keyword">if</span> toggle &#123;<br>            <span class="hljs-comment">// 默认有动画效果</span><br>            label.text <span class="hljs-operator">=</span> longText<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 不带动画效果</span><br>            <span class="hljs-type">UIView</span>.performWithoutAnimation &#123;<br>                <span class="hljs-comment">// 手动触发调整大小操作</span><br>                <span class="hljs-keyword">self</span>.invalidateIntrinsicContentSize()<br>                label.text <span class="hljs-operator">=</span> shortText<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UIViewController</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> collectionView: <span class="hljs-type">UICollectionView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> config <span class="hljs-operator">=</span> <span class="hljs-type">UICollectionLayoutListConfiguration</span>(appearance: .insetGrouped)<br>        <span class="hljs-keyword">let</span> layout <span class="hljs-operator">=</span> <span class="hljs-type">UICollectionViewCompositionalLayout</span>.list(using: config)<br>        <span class="hljs-keyword">let</span> collectionView <span class="hljs-operator">=</span> <span class="hljs-type">UICollectionView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds, collectionViewLayout: layout)<br>        collectionView.dataSource <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        collectionView.register(<span class="hljs-type">SelfResizingCollectionViewCell</span>.<span class="hljs-keyword">self</span>, forCellWithReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>)<br>        <span class="hljs-comment">// 设置selfSizingInvalidation</span><br>        collectionView.selfSizingInvalidation <span class="hljs-operator">=</span> .enabledIncludingConstraints<br>        <span class="hljs-keyword">return</span> collectionView<br>    &#125;()<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> model <span class="hljs-operator">=</span> <span class="hljs-type">WWDCModel</span>(info: <span class="hljs-string">&quot;WWDC22&quot;</span>, detail: <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    在 WWDC 22 上 Apple 推出了 Xcode 14，相比较 Xcode 13，它的功能与性能都有了巨大的提升。</span><br><span class="hljs-string">    同样在 WWDC 22 上 Apple 发布了 iOS 16，推出了很多新的内容。</span><br><span class="hljs-string">    在掌握了基于 iOS 15 开发的基础上，只要学习以下的新特性就能轻松过渡到 iOS 16。</span><br><span class="hljs-string">    &quot;&quot;&quot;</span>)<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(collectionView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICollectionViewDataSource</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICollectionViewDataSource</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">numberOfItemsInSection</span> <span class="hljs-params">section</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">5</span><br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">cellForItemAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">UICollectionViewCell</span> &#123;<br>        <span class="hljs-keyword">let</span> cell <span class="hljs-operator">=</span> collectionView.dequeueReusableCell(withReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>, for: indexPath)<br>            <span class="hljs-keyword">as!</span> <span class="hljs-type">SelfResizingCollectionViewCell</span><br>        cell.model <span class="hljs-operator">=</span> model<br>        <span class="hljs-keyword">return</span> cell<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>增加了 2 个新的代理方法<code>collectionView(_ collectionView: UICollectionView, canPerformPrimaryActionForItemAt indexPath: IndexPath) -&gt; Bool</code>与<code>collectionView(_ collectionView: UICollectionView, performPrimaryActionForItemAt indexPath: IndexPath)</code>，可以控制哪些 IndexPath 可以执行对应的操作。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 设备名</span><br>    <span class="hljs-keyword">let</span> devices <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iPhone&quot;</span>, <span class="hljs-string">&quot;iPad&quot;</span>, <span class="hljs-string">&quot;Mac Mini&quot;</span>, <span class="hljs-string">&quot;MacBook Pro&quot;</span>, <span class="hljs-string">&quot;iMac&quot;</span>, <span class="hljs-string">&quot;Mac Pro&quot;</span>, <span class="hljs-string">&quot;Apple TV&quot;</span>, <span class="hljs-string">&quot;Apple Watch&quot;</span>,<br>                   <span class="hljs-string">&quot;HomePod&quot;</span>, <span class="hljs-string">&quot;AirPods Pro&quot;</span>, <span class="hljs-string">&quot;AirPods&quot;</span>, <span class="hljs-string">&quot;iPod&quot;</span>, <span class="hljs-string">&quot;Magic Keyboard&quot;</span>, <span class="hljs-string">&quot;iPod Touch&quot;</span>, <span class="hljs-string">&quot;Display&quot;</span>]<br>    <span class="hljs-comment">// 设备图片</span><br>    <span class="hljs-keyword">let</span> images <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iphone&quot;</span>, <span class="hljs-string">&quot;ipad&quot;</span>, <span class="hljs-string">&quot;macmini&quot;</span>, <span class="hljs-string">&quot;laptopcomputer&quot;</span>, <span class="hljs-string">&quot;desktopcomputer&quot;</span>, <span class="hljs-string">&quot;macpro.gen3&quot;</span>, <span class="hljs-string">&quot;appletv&quot;</span>,<br>                  <span class="hljs-string">&quot;applewatch&quot;</span>, <span class="hljs-string">&quot;homepod.2&quot;</span>, <span class="hljs-string">&quot;airpodspro&quot;</span>, <span class="hljs-string">&quot;airpods&quot;</span>, <span class="hljs-string">&quot;ipod&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>, <span class="hljs-string">&quot;ipodtouch&quot;</span>, <span class="hljs-string">&quot;display&quot;</span>]<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> layout: <span class="hljs-type">UICollectionViewFlowLayout</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> spacing: <span class="hljs-type">CGFloat</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span><br>        <span class="hljs-keyword">let</span> numberOfItemsPerRow: <span class="hljs-type">CGFloat</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span><br>        <span class="hljs-keyword">let</span> layout <span class="hljs-operator">=</span> <span class="hljs-type">UICollectionViewFlowLayout</span>()<br>        <span class="hljs-keyword">let</span> width <span class="hljs-operator">=</span> (<span class="hljs-type">UIScreen</span>.main.bounds.width <span class="hljs-operator">-</span> spacing <span class="hljs-operator">*</span> (numberOfItemsPerRow <span class="hljs-operator">+</span> <span class="hljs-number">1</span>)) <span class="hljs-operator">/</span> numberOfItemsPerRow<br>        layout.itemSize <span class="hljs-operator">=</span> <span class="hljs-type">CGSize</span>(width: width, height: width <span class="hljs-operator">+</span> <span class="hljs-number">20</span>)<br>        layout.minimumInteritemSpacing <span class="hljs-operator">=</span> spacing<br>        layout.minimumLineSpacing <span class="hljs-operator">=</span> spacing<br>        layout.sectionInset <span class="hljs-operator">=</span> <span class="hljs-type">UIEdgeInsets</span>(top: <span class="hljs-number">0</span>, left: spacing, bottom: <span class="hljs-number">0</span>, right: spacing)<br>        <span class="hljs-keyword">return</span> layout<br>    &#125;()<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> collectionView: <span class="hljs-type">UICollectionView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> collectionView <span class="hljs-operator">=</span> <span class="hljs-type">UICollectionView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds, collectionViewLayout: layout)<br>        collectionView.register(<span class="hljs-type">UICollectionViewCell</span>.<span class="hljs-keyword">self</span>, forCellWithReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>)<br>        collectionView.dataSource <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        collectionView.delegate <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        <span class="hljs-keyword">return</span> collectionView<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(collectionView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICollectionViewDataSource</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICollectionViewDataSource</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">numberOfItemsInSection</span> <span class="hljs-params">section</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        <span class="hljs-keyword">return</span> devices.count<br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">cellForItemAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">UICollectionViewCell</span> &#123;<br>        <span class="hljs-keyword">let</span> cell <span class="hljs-operator">=</span> collectionView.dequeueReusableCell(withReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>, for: indexPath)<br>        <span class="hljs-comment">// 设置内容</span><br>        <span class="hljs-comment">// 使用UIHostingConfiguration支持嵌入SwiftUI</span><br>        cell.contentConfiguration <span class="hljs-operator">=</span> <span class="hljs-type">UIHostingConfiguration</span> &#123;<br>            <span class="hljs-type">VStack</span>(spacing: <span class="hljs-number">20</span>) &#123;<br>                <span class="hljs-type">Image</span>(systemName: images[indexPath.row])<br>                    .resizable()<br>                    .aspectRatio(contentMode: .fit)<br>                    .frame(width: <span class="hljs-number">60</span>)<br><br>                <span class="hljs-type">Text</span>(devices[indexPath.row])<br>                    .font(.caption)<br>            &#125;<br>            .foregroundStyle(.teal)<br>        &#125;<br>        .margins(.all, <span class="hljs-number">20</span>)<br>        .background(.orange)<br>        <span class="hljs-keyword">return</span> cell<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICollectionViewDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICollectionViewDelegate</span> &#123;<br>    <span class="hljs-comment">// MARK: 决定performPrimaryActionForRowAt()方法能否调用</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>,<br>                        <span class="hljs-params">canPerformPrimaryActionForItemAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">Bool</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 点击时调用，在didSelectRow()方法之后执行</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">performPrimaryActionForItemAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">didSelectItemAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">#function</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在使用 Cell Content Configuration 时，UICollectionViewCell 也增加了<code>defaultBackgroundConfiguration()</code>方法获取默认的背景配置，同时其<code>contentConfiguration</code>属性也增加了 UIHostingConfiguration 类型，支持使用 SwiftUI 定义 UICollectionViewCell 的内容。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 设备名</span><br>    <span class="hljs-keyword">let</span> devices <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iPhone&quot;</span>, <span class="hljs-string">&quot;iPad&quot;</span>, <span class="hljs-string">&quot;Mac Mini&quot;</span>, <span class="hljs-string">&quot;MacBook Pro&quot;</span>, <span class="hljs-string">&quot;iMac&quot;</span>, <span class="hljs-string">&quot;Mac Pro&quot;</span>, <span class="hljs-string">&quot;Apple TV&quot;</span>, <span class="hljs-string">&quot;Apple Watch&quot;</span>,<br>                   <span class="hljs-string">&quot;HomePod&quot;</span>, <span class="hljs-string">&quot;AirPods Pro&quot;</span>, <span class="hljs-string">&quot;AirPods&quot;</span>, <span class="hljs-string">&quot;iPod&quot;</span>, <span class="hljs-string">&quot;Magic Keyboard&quot;</span>, <span class="hljs-string">&quot;iPod Touch&quot;</span>, <span class="hljs-string">&quot;Display&quot;</span>]<br>    <span class="hljs-comment">// 设备图片</span><br>    <span class="hljs-keyword">let</span> images <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;iphone&quot;</span>, <span class="hljs-string">&quot;ipad&quot;</span>, <span class="hljs-string">&quot;macmini&quot;</span>, <span class="hljs-string">&quot;laptopcomputer&quot;</span>, <span class="hljs-string">&quot;desktopcomputer&quot;</span>, <span class="hljs-string">&quot;macpro.gen3&quot;</span>, <span class="hljs-string">&quot;appletv&quot;</span>,<br>                  <span class="hljs-string">&quot;applewatch&quot;</span>, <span class="hljs-string">&quot;homepod.2&quot;</span>, <span class="hljs-string">&quot;airpodspro&quot;</span>, <span class="hljs-string">&quot;airpods&quot;</span>, <span class="hljs-string">&quot;ipod&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>, <span class="hljs-string">&quot;ipodtouch&quot;</span>, <span class="hljs-string">&quot;display&quot;</span>]<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> layout: <span class="hljs-type">UICollectionViewFlowLayout</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> spacing: <span class="hljs-type">CGFloat</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span><br>        <span class="hljs-keyword">let</span> numberOfItemsPerRow: <span class="hljs-type">CGFloat</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span><br>        <span class="hljs-keyword">let</span> layout <span class="hljs-operator">=</span> <span class="hljs-type">UICollectionViewFlowLayout</span>()<br>        <span class="hljs-keyword">let</span> width <span class="hljs-operator">=</span> (<span class="hljs-type">UIScreen</span>.main.bounds.width <span class="hljs-operator">-</span> spacing <span class="hljs-operator">*</span> (numberOfItemsPerRow <span class="hljs-operator">+</span> <span class="hljs-number">1</span>)) <span class="hljs-operator">/</span> numberOfItemsPerRow<br>        layout.itemSize <span class="hljs-operator">=</span> <span class="hljs-type">CGSize</span>(width: width, height: width <span class="hljs-operator">+</span> <span class="hljs-number">20</span>)<br>        layout.minimumInteritemSpacing <span class="hljs-operator">=</span> spacing<br>        layout.minimumLineSpacing <span class="hljs-operator">=</span> spacing<br>        layout.sectionInset <span class="hljs-operator">=</span> <span class="hljs-type">UIEdgeInsets</span>(top: <span class="hljs-number">0</span>, left: spacing, bottom: <span class="hljs-number">0</span>, right: spacing)<br>        <span class="hljs-keyword">return</span> layout<br>    &#125;()<br><br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> collectionView: <span class="hljs-type">UICollectionView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> collectionView <span class="hljs-operator">=</span> <span class="hljs-type">UICollectionView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds, collectionViewLayout: layout)<br>        collectionView.register(<span class="hljs-type">UICollectionViewCell</span>.<span class="hljs-keyword">self</span>, forCellWithReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>)<br>        collectionView.dataSource <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        <span class="hljs-keyword">return</span> collectionView<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(collectionView)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UICollectionViewDataSource</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UICollectionViewDataSource</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">numberOfItemsInSection</span> <span class="hljs-params">section</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        <span class="hljs-keyword">return</span> devices.count<br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">collectionView</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">collectionView</span>: <span class="hljs-type">UICollectionView</span>, <span class="hljs-params">cellForItemAt</span> <span class="hljs-params">indexPath</span>: <span class="hljs-type">IndexPath</span>) -&gt; <span class="hljs-type">UICollectionViewCell</span> &#123;<br>        <span class="hljs-keyword">let</span> cell <span class="hljs-operator">=</span> collectionView.dequeueReusableCell(withReuseIdentifier: <span class="hljs-string">&quot;abc&quot;</span>, for: indexPath)<br>        <span class="hljs-comment">// 设置内容</span><br>        <span class="hljs-comment">// 使用UIHostingConfiguration支持嵌入SwiftUI</span><br>        cell.contentConfiguration <span class="hljs-operator">=</span> <span class="hljs-type">UIHostingConfiguration</span> &#123;<br>            <span class="hljs-type">VStack</span>(spacing: <span class="hljs-number">20</span>) &#123;<br>                <span class="hljs-type">Image</span>(systemName: images[indexPath.row])<br>                    .resizable()<br>                    .aspectRatio(contentMode: .fit)<br>                    .frame(width: <span class="hljs-number">60</span>)<br><br>                <span class="hljs-type">Text</span>(devices[indexPath.row])<br>                    .font(.caption)<br>            &#125;<br>            .foregroundStyle(.teal)<br>        &#125;<br>        .margins(.all, <span class="hljs-number">20</span>) <span class="hljs-comment">// 边距</span><br>        .background(.orange) <span class="hljs-comment">// 背景</span><br><br>        <span class="hljs-comment">// 设置背景一</span><br>        <span class="hljs-keyword">var</span> background1 <span class="hljs-operator">=</span> <span class="hljs-type">UIBackgroundConfiguration</span>.listPlainCell()<br>        background1.backgroundColor <span class="hljs-operator">=</span> .systemPurple<br>        background1.cornerRadius <span class="hljs-operator">=</span> <span class="hljs-number">8</span><br>        cell.backgroundConfiguration <span class="hljs-operator">=</span> background1<br>        <span class="hljs-comment">// 设置背景二</span><br>        <span class="hljs-keyword">var</span> background2 <span class="hljs-operator">=</span> cell.defaultBackgroundConfiguration()<br>        background2.backgroundColor <span class="hljs-operator">=</span> .systemRed<br>        background2.cornerRadius <span class="hljs-operator">=</span> <span class="hljs-number">8</span><br>        cell.backgroundConfiguration <span class="hljs-operator">=</span> background2<br>        <br>        <span class="hljs-keyword">return</span> cell<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：设置背景的优先级：<code>UIBackgroundConfiguration.listPlainCell()</code>&gt;<code>.background</code>，<code>cell.defaultBackgroundConfiguration()</code>&gt;<code>.background</code>，<code>UIBackgroundConfiguration.listPlainCell()</code>与<code>cell.defaultBackgroundConfiguration()</code>平级。</p></blockquote><ul><li>UICollectionViewCompositionalLayout 中 NSCollectionLayoutGroup 的方法<code>horizontal(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -&gt; Self</code>被废弃，替换为<code>horizontalGroup(with layoutSize: NSCollectionLayoutSize, repeatingSubitem subitem: NSCollectionLayoutItem, count: Int) -&gt; Self</code>，方法<code>vertical(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -&gt; Self</code>被废弃，替换为<code>verticalGroup(with layoutSize: NSCollectionLayoutSize, repeatingSubitem subitem: NSCollectionLayoutItem, count: Int) -&gt; Self</code>。</li><li>用于显示 Context Menus 的代理方法<code>collectionView(_ collectionView: UICollectionView,                   contextMenuConfigurationForItemAt indexPath: IndexPath, point: CGPoint)</code>被废弃，替换为<code>collectionView(_ collectionView: UICollectionView,                   contextMenuConfigurationForItemAt indexPaths: [IndexPath], point: CGPoint)</code>，可以针对不同的 IndexPath 设置不同的 Context Menus。</li></ul><h3 id="UINavigationItem"><a href="#UINavigationItem" class="headerlink" title="UINavigationItem"></a>UINavigationItem</h3><ul><li>增加了类型为 UINavigationItem.ItemStyle 的属性<code>style</code>用于描述 UINavigationItem 在 UINavigationBar 上的布局，共有 3 种样式。<ul><li><code>navigator</code>：默认样式，类似之前的效果，<code>centerItemGroups</code>收缩显示在右侧，需要点击才能展开。</li><li><code>browser</code>：浏览器样式，在 iPad（iPhone 横屏） 下，当前 UIViewController 的<code>title（titleView）</code>显示在左侧，<code>centerItemGroups</code>显示在中间。</li><li><code>editor</code>：编辑器样式，在 iPad（iPhone 横屏） 下，当前 UIViewController 的<code>title（titleView）</code>显示在左侧，<code>centerItemGroups</code>显示在中间。与<code>browser</code>的区别在于使用该样式时，返回按钮不会显示上一个 UIViewController 的<code>title</code>。</li></ul></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.backgroundColor <span class="hljs-operator">=</span> .red<br>        <span class="hljs-comment">// 左侧</span><br>        navigationItem.leftBarButtonItems <span class="hljs-operator">=</span> [<br>            <span class="hljs-type">UIBarButtonItem</span>(barButtonSystemItem: .add, target: <span class="hljs-keyword">self</span>, action: <span class="hljs-keyword">#selector</span>(gotoNextViewController)),<br>            <span class="hljs-type">UIBarButtonItem</span>(barButtonSystemItem: .bookmarks, target: <span class="hljs-literal">nil</span>, action: <span class="hljs-literal">nil</span>)]<br><br>        <span class="hljs-comment">// 标题</span><br>        navigationItem.title <span class="hljs-operator">=</span> <span class="hljs-string">&quot;导航栏&quot;</span><br>        <span class="hljs-comment">// navigationItem.titleView = UISwitch()</span><br><br>        <span class="hljs-comment">// 中间</span><br>        <span class="hljs-keyword">let</span> fixedGroup <span class="hljs-operator">=</span> <span class="hljs-type">UIBarButtonItemGroup</span>.fixedGroup(items: [<br>            <span class="hljs-type">UIBarButtonItem</span>(title: <span class="hljs-string">&quot;撤销&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;arrow.uturn.backward&quot;</span>),<br>                            primaryAction: <span class="hljs-type">UIAction</span> &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                            &#125;),<br>            <span class="hljs-type">UIBarButtonItem</span>(title: <span class="hljs-string">&quot;反撤销&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;arrow.uturn.forward&quot;</span>),<br>                            primaryAction: <span class="hljs-type">UIAction</span> &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                            &#125;)])<br>        <span class="hljs-keyword">let</span> movableGroup <span class="hljs-operator">=</span> <span class="hljs-type">UIBarButtonItem</span>(title: <span class="hljs-string">&quot;裁剪&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;crop&quot;</span>),<br>                                           primaryAction: <span class="hljs-type">UIAction</span> &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                                           &#125;).creatingMovableGroup(customizationIdentifier: <span class="hljs-string">&quot;Cropping&quot;</span>)<br>        navigationItem.centerItemGroups <span class="hljs-operator">=</span> [fixedGroup, movableGroup]<br><br>        <span class="hljs-comment">// 右侧</span><br>        navigationItem.rightBarButtonItems <span class="hljs-operator">=</span> [<br>            <span class="hljs-type">UIBarButtonItem</span>(barButtonSystemItem: .camera, target: <span class="hljs-literal">nil</span>, action: <span class="hljs-literal">nil</span>),<br>            <span class="hljs-type">UIBarButtonItem</span>(barButtonSystemItem: .done, target: <span class="hljs-literal">nil</span>, action: <span class="hljs-literal">nil</span>)]<br><br>        <span class="hljs-comment">// 设置style</span><br>        navigationItem.style <span class="hljs-operator">=</span> .editor<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 导航跳转</span><br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">gotoNextViewController</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">sender</span>: <span class="hljs-type">UIBarButtonItem</span>) &#123;<br>        <span class="hljs-keyword">let</span> nextViewController <span class="hljs-operator">=</span> <span class="hljs-type">UIViewController</span>()<br>        nextViewController.view.backgroundColor <span class="hljs-operator">=</span> .red<br>        nextViewController.navigationItem.title <span class="hljs-operator">=</span> <span class="hljs-string">&quot;下一页&quot;</span><br><br>        navigationController<span class="hljs-operator">?</span>.pushViewController(nextViewController, animated: <span class="hljs-literal">true</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：在 iPad 上查看效果比较明显。</p></blockquote><ul><li>增加了闭包类型的属性<code>titleMenuProvider</code>用于给当前导航栏的标题增加操作菜单。增加之后在标题右侧会显示一个箭头，点击可以弹出操作菜单。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        navigationItem.title <span class="hljs-operator">=</span> <span class="hljs-string">&quot;标题&quot;</span><br>        <span class="hljs-comment">// 设置titleMenuProvider</span><br>        navigationItem.titleMenuProvider <span class="hljs-operator">=</span> &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-keyword">let</span> favorite <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Favorite&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;heart.fill&quot;</span>)) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;favorite&quot;</span>)<br>            &#125;<br>            <span class="hljs-keyword">let</span> share <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Share&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;square.and.arrow.up.fill&quot;</span>)) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;share&quot;</span>)<br>            &#125;<br>            <span class="hljs-keyword">let</span> delete <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Delete&quot;</span>,<br>                                  image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;trash.fill&quot;</span>),<br>                                  attributes: [.destructive]) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;delete&quot;</span>)<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-type">UIMenu</span>(children: [favorite, share, delete])<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：必须设置标题才有效果。</p></blockquote><ul><li>增加了类型为 UIAction 的属性<code>backAction</code>用于实现<strong>当前 UIViewController</strong> 的返回按钮事件。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-comment">// 设置backAction</span><br>        navigationItem.backAction <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(handler: &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;返回按钮点击实践&quot;</span>)<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="UISheetPresentationController"><a href="#UISheetPresentationController" class="headerlink" title="UISheetPresentationController"></a>UISheetPresentationController</h3><p>Modal 出来的 UIViewController 可以自定义显示的大小。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-comment">// MARK: - 自定义标识符</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">UISheetPresentationController</span>.<span class="hljs-title class_">Detent</span>.<span class="hljs-title class_">Identifier</span> &#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">let</span> small <span class="hljs-operator">=</span> <span class="hljs-type">UISheetPresentationController</span>.<span class="hljs-type">Detent</span>.<span class="hljs-type">Identifier</span>(<span class="hljs-string">&quot;small&quot;</span>)<br>&#125;<br><br><span class="hljs-comment">// MARK: - 源UIViewController</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-keyword">let</span> modalViewController <span class="hljs-operator">=</span> <span class="hljs-type">ModalViewController</span>()<br>        <span class="hljs-comment">// 设置UISheetPresentationController</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> sheet <span class="hljs-operator">=</span> modalViewController.sheetPresentationController &#123;<br>            <span class="hljs-comment">// 支持的自定义显示大小</span><br>            sheet.detents <span class="hljs-operator">=</span> [<br>                .custom &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>                    <span class="hljs-number">200.0</span> <span class="hljs-comment">// 固定大小</span><br>                &#125;,<br>                .custom(identifier: .small) &#123; context <span class="hljs-keyword">in</span><br>                    <span class="hljs-number">0.1</span> <span class="hljs-operator">*</span> context.maximumDetentValue <span class="hljs-comment">// 占上下文最大尺寸的0.1</span><br>                &#125;,<br>                .custom &#123; context <span class="hljs-keyword">in</span> <span class="hljs-comment">//</span><br>                    <span class="hljs-number">0.5</span> <span class="hljs-operator">*</span> context.maximumDetentValue <span class="hljs-comment">// 占上下文最大尺寸的0.5</span><br>                &#125;,<br>                .large()]<br>            <span class="hljs-comment">// 未设置或者identifier不匹配，弹出时底层会变暗</span><br>            <span class="hljs-comment">// 设置后弹出时超过identifier对应的大小底层才会变暗</span><br>            sheet.largestUndimmedDetentIdentifier <span class="hljs-operator">=</span> .small<br>            sheet.prefersGrabberVisible <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        &#125;<br>        present(modalViewController, animated: <span class="hljs-literal">true</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - 模态弹出的UIViewController</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ModalViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.backgroundColor <span class="hljs-operator">=</span> .red<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="沙盒"><a href="#沙盒" class="headerlink" title="沙盒"></a>沙盒</h3><ul><li>可以直接通过 URL 的属性获取沙盒路径的 URL，不需要再借助于<code>FileManager.default.url()</code>或<code>FileManager.default.urls()</code>方法。</li><li>URL 的<code>appendingPathComponent()</code>方法即将被废弃，建议使用新方法<code>append(path:directoryHint:)</code>与<code>appending(path:directoryHint:)</code>。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-comment">// Home目录</span><br>        <span class="hljs-keyword">let</span> homeDirectory <span class="hljs-operator">=</span> <span class="hljs-type">URL</span>.homeDirectory<br>        <span class="hljs-built_in">print</span>(homeDirectory)<br><br>        <span class="hljs-comment">// Documents目录</span><br>        <span class="hljs-keyword">let</span> documentsURL <span class="hljs-operator">=</span> <span class="hljs-type">URL</span>.documentsDirectory<br>        <span class="hljs-built_in">print</span>(documentsURL)<br><br>        <span class="hljs-comment">// Library目录</span><br>        <span class="hljs-keyword">var</span> libraryDirectory <span class="hljs-operator">=</span> <span class="hljs-type">URL</span>.libraryDirectory<br>        <span class="hljs-comment">// append()：直接在libraryDirectory进行拼接</span><br>        <span class="hljs-comment">// directoryHint：是否应该执行文件系统检查，以确定路径是否指向文件夹</span><br>        libraryDirectory.append(path: <span class="hljs-string">&quot;abc&quot;</span>, directoryHint: .inferFromPath)<br>        <span class="hljs-built_in">print</span>(libraryDirectory)<br>        <span class="hljs-comment">// appending()：拼接后产生新的URL，不影响原来的libraryDirectory</span><br>        <span class="hljs-keyword">let</span> newURL <span class="hljs-operator">=</span> libraryDirectory.appending(path: <span class="hljs-string">&quot;abc&quot;</span>, directoryHint: .inferFromPath)<br>        <span class="hljs-built_in">print</span>(newURL)<br><br>        <span class="hljs-comment">// Caches目录</span><br>        <span class="hljs-keyword">let</span> cachesDirectory <span class="hljs-operator">=</span> <span class="hljs-type">URL</span>.cachesDirectory<br>        <span class="hljs-built_in">print</span>(cachesDirectory)<br><br>        <span class="hljs-comment">// tmp目录</span><br>        <span class="hljs-keyword">let</span> temporaryDirectory <span class="hljs-operator">=</span> <span class="hljs-type">URL</span>.temporaryDirectory<br>        <span class="hljs-built_in">print</span>(temporaryDirectory)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="URLSession"><a href="#URLSession" class="headerlink" title="URLSession"></a>URLSession</h3><ul><li>建议通过<strong>连接迁移</strong>来优化网络切换场景下的 TCP 连接重建，降低网络的延迟。</li><li>最低版本要求为 iOS 11。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> session: <span class="hljs-type">URLSession</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">let</span> configuration <span class="hljs-operator">=</span> <span class="hljs-type">URLSessionConfiguration</span>.default<br>        <span class="hljs-comment">// MultipathServiceType是一个枚举类型，App可以采用不同的策略来利用这些网络通道</span><br>        <span class="hljs-comment">// handover的含义是启用MultipathService, 当且仅当主通道无法使用时，才会使用其他的通道，可以使App获得无缝切换的效果</span><br>        configuration.multipathServiceType <span class="hljs-operator">=</span> .handover<br>        <span class="hljs-keyword">let</span> session <span class="hljs-operator">=</span> <span class="hljs-type">URLSession</span>(configuration: configuration)<br>        <span class="hljs-keyword">return</span> session<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="WKWebView"><a href="#WKWebView" class="headerlink" title="WKWebView"></a>WKWebView</h3><ul><li>增加了监听网页全屏的 API。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0, user-scalable=no&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;300px&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;300px&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: aqua;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;fullScreen()&quot;</span>&gt;</span>全屏<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">fullScreen</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;canvas&quot;</span>).<span class="hljs-title function_">webkitRequestFullscreen</span>()</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><span class="hljs-keyword">import</span> WebKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> webView: <span class="hljs-type">WKWebView</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">var</span> webView <span class="hljs-operator">=</span> <span class="hljs-type">WKWebView</span>(frame: <span class="hljs-type">UIScreen</span>.main.bounds)<br>        <span class="hljs-comment">// iOS16新增，是否允许全屏</span><br>        webView.configuration.preferences.isElementFullscreenEnabled <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        <span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-type">Bundle</span>.main.url(forResource: <span class="hljs-string">&quot;index&quot;</span>, withExtension: <span class="hljs-string">&quot;html&quot;</span>)<span class="hljs-operator">!</span><br>        <span class="hljs-keyword">let</span> request <span class="hljs-operator">=</span> <span class="hljs-type">URLRequest</span>(url: url)<br>        webView.load(request)<br>        <span class="hljs-keyword">return</span> webView<br>    &#125;()<br><br>    <span class="hljs-comment">// KVO</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> fullScreenObservation: <span class="hljs-type">NSKeyValueObservation</span>?<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;fullscreenState：&quot;</span>, webView.fullscreenState)<br><br>        view.addSubview(webView)<br>        <span class="hljs-comment">// 监听网⻚的全屏状态，共有4种状态</span><br>        <span class="hljs-comment">// 0：未全屏</span><br>        <span class="hljs-comment">// 1：正在全屏</span><br>        <span class="hljs-comment">// 2：全屏</span><br>        <span class="hljs-comment">// 3：退出全屏</span><br>        fullScreenObservation <span class="hljs-operator">=</span> webView.observe(\.fullscreenState, options: [.new]) &#123; webView, <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;fullscreenState：&quot;</span>, webView.fullscreenState)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>支持 UIFindInteraction，参考该知识点的案例。</li></ul><h3 id="UIMenu"><a href="#UIMenu" class="headerlink" title="UIMenu"></a>UIMenu</h3><p>增加了属性<code>preferredElementSize</code>用于设置菜单显示时内部元素的尺寸，共有 3 种尺寸可选，分别为<code>small</code>、<code>medium</code>与<code>large</code>。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidAppear</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">animated</span>: <span class="hljs-type">Bool</span>) &#123;<br>        <span class="hljs-keyword">super</span>.viewDidAppear(animated)<br><br>        showMenuInButton()<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 给UIButton添加菜单</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">showMenuInButton</span>() &#123;<br>        <span class="hljs-keyword">var</span> config <span class="hljs-operator">=</span> <span class="hljs-type">UIButton</span>.<span class="hljs-type">Configuration</span>.filled()<br>        config.title <span class="hljs-operator">=</span> <span class="hljs-string">&quot;显示菜单&quot;</span><br>        config.baseForegroundColor <span class="hljs-operator">=</span> .white<br>        config.background.backgroundColor <span class="hljs-operator">=</span> .systemBlue<br>        config.background.cornerRadius <span class="hljs-operator">=</span> <span class="hljs-number">10</span><br>        config.contentInsets <span class="hljs-operator">=</span> .<span class="hljs-keyword">init</span>(top: <span class="hljs-number">10</span>, leading: <span class="hljs-number">20</span>, bottom: <span class="hljs-number">10</span>, trailing: <span class="hljs-number">20</span>)<br>        <span class="hljs-keyword">let</span> button <span class="hljs-operator">=</span> <span class="hljs-type">UIButton</span>(configuration: config)<br>        button.sizeToFit()<br>        button.center <span class="hljs-operator">=</span> view.center<br>        button.menu <span class="hljs-operator">=</span> createMenu()<br>        button.showsMenuAsPrimaryAction <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        view.addSubview(button)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 创建菜单</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">createMenu</span>() -&gt; <span class="hljs-type">UIMenu</span> &#123;<br>        <span class="hljs-keyword">let</span> favorite <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Favorite&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;heart.fill&quot;</span>)) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;favorite&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> share <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Share&quot;</span>, image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;square.and.arrow.up.fill&quot;</span>)) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;share&quot;</span>)<br>        &#125;<br>        <span class="hljs-keyword">let</span> delete <span class="hljs-operator">=</span> <span class="hljs-type">UIAction</span>(title: <span class="hljs-string">&quot;Delete&quot;</span>,<br>                              image: <span class="hljs-type">UIImage</span>(systemName: <span class="hljs-string">&quot;trash.fill&quot;</span>),<br>                              attributes: [.destructive]) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;delete&quot;</span>)<br>        &#125;<br>        <span class="hljs-comment">// UIMenu支持通过preferredElementSize属性设置显示的元素尺寸</span><br>        <span class="hljs-keyword">let</span> menu <span class="hljs-operator">=</span> <span class="hljs-type">UIMenu</span>(title: <span class="hljs-string">&quot;&quot;</span>, preferredElementSize: .small, children: [favorite, share, delete])<br>        <span class="hljs-keyword">return</span> menu<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="UIDevice"><a href="#UIDevice" class="headerlink" title="UIDevice"></a>UIDevice</h3><ul><li>获取设备信息时，无法获取设备前面用户的信息。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-keyword">let</span> name <span class="hljs-operator">=</span> <span class="hljs-type">UIDevice</span>.current.name<br>        <span class="hljs-comment">// iOS16之前：XXX iPhone 13 Pro Max</span><br>        <span class="hljs-comment">// iOS16之后：iPhone 13 Pro Max，不再包含用户信息</span><br>        <span class="hljs-built_in">print</span>(name)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>不再支持通过<code>setValue()</code>方法设置设备的方向，替换为 UIWindowScene 的<code>requestGeometryUpdate()</code>方法。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-comment">// 不再支持</span><br>        <span class="hljs-comment">// UIDevice.current.setValue(UIDeviceOrientation.landscapeLeft, forKey: &quot;orientation&quot;)</span><br><br>        <span class="hljs-keyword">let</span> windowScene <span class="hljs-operator">=</span> <span class="hljs-type">UIApplication</span>.shared.connectedScenes.first <span class="hljs-keyword">as?</span> <span class="hljs-type">UIWindowScene</span><br>        <span class="hljs-comment">// 通过UIWindowScene的requestGeometryUpdate()设置</span><br>        windowScene<span class="hljs-operator">?</span>.requestGeometryUpdate(.iOS(interfaceOrientations: .landscapeLeft))<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="附近互动"><a href="#附近互动" class="headerlink" title="附近互动"></a>附近互动</h3><ul><li>Nearby Interaction 推出了一种新的相机辅助模式，该模式可以与 ARKit 进行集成。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> NearbyInteraction<br><span class="hljs-keyword">import</span> RealityKit<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-comment">// NISession.isSupported被废弃，iOS16之后的判断</span><br>        <span class="hljs-keyword">let</span> capabilities <span class="hljs-operator">=</span> <span class="hljs-type">NISession</span>.deviceCapabilities<br>        <span class="hljs-keyword">guard</span> capabilities.supportsDirectionMeasurement,<br>              capabilities.supportsPreciseDistanceMeasurement,<br>              capabilities.supportsCameraAssistance<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Nearby Interaction在当前设备不可用&quot;</span>)<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> niSession <span class="hljs-operator">=</span> <span class="hljs-type">NISession</span>()<br>        <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> peerDiscoveryToken <span class="hljs-operator">=</span> <span class="hljs-keyword">try?</span> <span class="hljs-type">NSKeyedUnarchiver</span>.unarchivedObject(ofClass: <span class="hljs-type">NIDiscoveryToken</span>.<span class="hljs-keyword">self</span>,<br>                                                                               from: <span class="hljs-type">Data</span>()) <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">return</span> &#125;<br>        <span class="hljs-keyword">let</span> config <span class="hljs-operator">=</span> <span class="hljs-type">NINearbyPeerConfiguration</span>(peerToken: peerDiscoveryToken)<br>        <span class="hljs-comment">// iOS16新增</span><br>        config.isCameraAssistanceEnabled <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment">// 设置ARSession，一定要在run之前设置</span><br>        niSession.setARSession(<span class="hljs-type">ARView</span>().session)<br>        niSession.run(config)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>可以通过蓝牙与第三方 UWB 配件进行后台交互。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> CoreBluetooth<br><span class="hljs-keyword">import</span> NearbyInteraction<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-keyword">let</span> capabilities <span class="hljs-operator">=</span> <span class="hljs-type">NISession</span>.deviceCapabilities<br>        <span class="hljs-keyword">guard</span> capabilities.supportsDirectionMeasurement,<br>              capabilities.supportsPreciseDistanceMeasurement,<br>              capabilities.supportsCameraAssistance<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Nearby Interaction在当前设备不可用&quot;</span>)<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> niSession <span class="hljs-operator">=</span> <span class="hljs-type">NISession</span>()<br>        <span class="hljs-keyword">do</span> &#123;<br>            <span class="hljs-comment">// iOS16新增</span><br>            <span class="hljs-comment">// bluetoothPeerIdentifier应该传入CBPeripheral的identifier</span><br>            <span class="hljs-keyword">let</span> config <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">NINearbyAccessoryConfiguration</span>(accessoryData: <span class="hljs-type">Data</span>(), bluetoothPeerIdentifier: <span class="hljs-type">UUID</span>())<br>            niSession.run(config)<br>        &#125; <span class="hljs-keyword">catch</span> &#123;<br>            <span class="hljs-built_in">print</span>(error.localizedDescription)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：需要在项目的 <strong>Signing&amp;Capabilities</strong> 添加 <strong>Capability</strong>，找到并开启 <strong>Background Modes</strong>，然后在 <strong>Background Modes</strong> 中勾选 <strong>Uses Bluetooth LE accessory</strong> 与 <strong>Uses Nearby Interaction</strong>。</p></blockquote><h3 id="Widget"><a href="#Widget" class="headerlink" title="Widget"></a>Widget</h3><ul><li>新增<code>WidgetRenderingMode</code>用于设置与获取小组件的渲染模式，共用 3 种渲染模式。<ul><li><code>fullColor</code>：系统不会更改小组件的渲染颜色，完全按照指定的颜色显示。</li><li><code>accented</code>：使用 AccentColor 渲染小组件的颜色。</li><li><code>vibrant</code>：使用单色渲染小组件的颜色。</li></ul></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> WidgetKit<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">UserWidgetView</span>: <span class="hljs-title class_">View</span> &#123;<br>    <span class="hljs-meta">@Environment</span>(\.widgetRenderingMode) <span class="hljs-keyword">var</span> renderingMode<br><br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> &#123;<br>        <span class="hljs-keyword">switch</span> renderingMode &#123;<br>        <span class="hljs-keyword">case</span> .fullColor:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;zhangsan&quot;</span>)<br>                .widgetAccentable() <span class="hljs-comment">// 指定AccentColor渲染</span><br>        <span class="hljs-keyword">case</span> .accented:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;lisi&quot;</span>)<br>        <span class="hljs-keyword">case</span> .vibrant:<br>            <span class="hljs-type">ZStack</span> &#123;<br>                <span class="hljs-type">AccessoryWidgetBackground</span>()<br><br>                <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;wangwu&quot;</span>)<br>            &#125;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;default&quot;</span>)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>为了支持 iOS <strong>锁屏显示</strong>与 watchOS <strong>表盘显示</strong>，WidgetFamily 增加了新的分类<code>accessory</code>，包含如下的几个新的尺寸。</li></ul><table><thead><tr><th align="left">尺寸类型</th><th>含义</th><th align="left">iOS 是否可用</th><th>watchOS 是否可用</th></tr></thead><tbody><tr><td align="left"><code>accessoryCircular</code></td><td>圆形</td><td align="left">是</td><td>是</td></tr><tr><td align="left"><code>accessoryRectangular</code></td><td>矩形</td><td align="left">是</td><td>是</td></tr><tr><td align="left"><code>accessoryInline</code></td><td>行内（包含文本与可选的图片）</td><td align="left">是</td><td>是</td></tr><tr><td align="left"><code>accessoryCorner</code></td><td>watchOS 表盘（四周）专用</td><td align="left">否</td><td>是</td></tr></tbody></table><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> WidgetKit<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">UserWidgetEntryView</span>: <span class="hljs-title class_">View</span> &#123;<br>    <span class="hljs-meta">@Environment</span>(\.widgetFamily) <span class="hljs-keyword">var</span> family<br><br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> &#123;<br>        <span class="hljs-keyword">switch</span> family &#123;<br>        <span class="hljs-keyword">case</span> .systemSmall:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit Small&quot;</span>)<br>        <span class="hljs-keyword">case</span> .systemMedium:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit Medium&quot;</span>)<br>        <span class="hljs-keyword">case</span> .systemLarge:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit Large&quot;</span>)<br>        <span class="hljs-keyword">case</span> .systemExtraLarge:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit ExtraLarge&quot;</span>)<br>        <span class="hljs-keyword">case</span> .accessoryRectangular:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit Rectangular&quot;</span>)<br>        <span class="hljs-keyword">case</span> .accessoryCircular:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit Circular&quot;</span>)<br>        <span class="hljs-keyword">case</span> .accessoryInline:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit Inline&quot;</span>)<br>        <span class="hljs-keyword">#if</span> os(watchOS)<br>            <span class="hljs-keyword">case</span> .accessoryCorner:<br>                <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;WidgetKit Corner&quot;</span>)<br>        <span class="hljs-keyword">#endif</span><br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;default&quot;</span>)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>iOS 锁屏小组件默认情况下会显示用户的内容，如果不想显示，可以在设置中配置。watchOS 只要佩戴默认处于解锁状态，会一直显示小组件的内容，但可以通过<code>Low luminance</code>降低亮度以保护用户隐私。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> WidgetKit<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">UserWidgetEntryView</span>: <span class="hljs-title class_">View</span> &#123;<br>    <span class="hljs-meta">@Environment</span>(\.widgetFamily) <span class="hljs-keyword">var</span> family<br>    <span class="hljs-keyword">#if</span> os(watchOS)<br>        <span class="hljs-meta">@Environment</span>(\.isLuminanceReduced) <span class="hljs-keyword">var</span> isLuminanceReduced<br>    <span class="hljs-keyword">#endif</span><br><br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> &#123;<br>        <span class="hljs-keyword">switch</span> family &#123;<br>        <span class="hljs-keyword">case</span> .accessoryRectangular:<br>            <span class="hljs-type">ZStack</span> &#123;<br>                <span class="hljs-type">AccessoryWidgetBackground</span>()<br><br>                <span class="hljs-type">HStack</span> &#123;<br>                    <span class="hljs-type">Image</span>(systemName: <span class="hljs-string">&quot;clock&quot;</span>)<br><br>                    <span class="hljs-keyword">#if</span> os(watchOS)<br>                        <span class="hljs-keyword">if</span> isLuminanceReduced &#123;<br>                            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;🙈&quot;</span>)<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;🐵&quot;</span>)<br>                        &#125;<br>                    <span class="hljs-keyword">#endif</span><br>                &#125;<br>            &#125;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;default&quot;</span>)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Live-Activity"><a href="#Live-Activity" class="headerlink" title="Live Activity"></a>Live Activity</h3><ul><li>一种显示在锁屏界面的特殊 Widget，但官方强调 Live Activity 与 Widget 并不完全相等，因为二者使用不同的机制进行更新。</li><li>可以通过 ActivityKit 来配置、启动、更新与终止 Live Activity，也可以通过远程通知更新 Live Activity，但二者在更新时的动态数据大小均不能超过 4 KB。</li><li>Live Activity 在锁屏上最多只能停留 12 小时，超过时间会自动停止运行。</li><li><strong>仅支持 iPhone</strong>。</li></ul><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ol><li>在<strong>主项目</strong>的 Info.plist 中增加字段<code>NSSupportsLiveActivities</code>，将其类型设置为<code>Boolean</code>，值为<code>YES</code>。</li><li>添加 Widget 扩展。</li><li>在扩展中创建一个 Live Activity 的源文件，并将该文件同时共享给主项目与 Widget 扩展。</li><li>如果需要远程通知更新，还需要进行远程通知的相关配置。</li></ol><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><ul><li>Activity 源文件：创建 ActivityAttributes。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> ActivityKit<br><span class="hljs-keyword">import</span> Foundation<br><br><span class="hljs-comment">// MARK：- ActivityAttributes，需要共享给App与Widget</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SportActivityAttributes</span>: <span class="hljs-title class_">ActivityAttributes</span> &#123;<br>    <span class="hljs-comment">// 内部结构体ContentState，通过它启动、更新与终止Activity</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">ContentState</span>: <span class="hljs-title class_">Codable</span>, <span class="hljs-title class_">Hashable</span> &#123;<br>        <span class="hljs-comment">// ContentState需要的属性，可以实时更新</span><br>        <span class="hljs-keyword">let</span> amount: <span class="hljs-type">Double</span><br>    &#125;<br><br>    <span class="hljs-comment">// ActivityAttributes需要的属性，非实时更新</span><br>    <span class="hljs-keyword">var</span> date: <span class="hljs-type">Date</span><br>    <span class="hljs-keyword">let</span> name: <span class="hljs-type">String</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>Widget 源文件：增加 WidgetBundle，使 Widget 与 Live Activity 同时生效。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">// MARK：- SwiftUI View</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SportActivityView</span>: <span class="hljs-title class_">View</span> &#123;<br>    <span class="hljs-comment">// 运动名称</span><br>    <span class="hljs-keyword">let</span> name: <span class="hljs-type">String</span><br>    <span class="hljs-comment">// 运动开始与结束时间</span><br>    <span class="hljs-keyword">let</span> startDate: <span class="hljs-type">Date</span><br>    <span class="hljs-keyword">var</span> endDate: <span class="hljs-type">Date</span> &#123;<br>        startDate.addingTimeInterval(<span class="hljs-number">60</span>)<br>    &#125;<br><br>    <span class="hljs-comment">// 运动量</span><br>    <span class="hljs-keyword">let</span> amount: <span class="hljs-type">Double</span><br><br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> &#123;<br>        <span class="hljs-type">HStack</span>(spacing: <span class="hljs-number">20</span>) &#123;<br>            <span class="hljs-type">ProgressView</span>(timerInterval: startDate <span class="hljs-operator">...</span> endDate) &#123;<br>                <span class="hljs-keyword">let</span> total <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(format: <span class="hljs-string">&quot;%.1f&quot;</span>, amount)<br>                <span class="hljs-type">Text</span>(<span class="hljs-string">&quot;本次<span class="hljs-subst">\(name)</span> <span class="hljs-subst">\(total)</span> m&quot;</span>)<br>                    .font(.system(size: <span class="hljs-number">17</span>))<br>            &#125;<br>            .tint(.green)<br><br>            <span class="hljs-type">Image</span>(systemName: <span class="hljs-string">&quot;figure.run&quot;</span>)<br>                .foregroundStyle(.green)<br>        &#125;<br>        .foregroundStyle(.white)<br>        .padding()<br>        .activityBackgroundTint(<span class="hljs-type">Color</span>.purple.opacity(<span class="hljs-number">0.5</span>)) <span class="hljs-comment">// 背景色</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK：- ActivityWidget，非原来的Widget</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SportActivityWidget</span>: <span class="hljs-title class_">Widget</span> &#123;<br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">WidgetConfiguration</span> &#123;<br>        <span class="hljs-comment">// 此时使用的是ActivityConfiguration</span><br>        <span class="hljs-type">ActivityConfiguration</span>(attributesType: <span class="hljs-type">SportActivityAttributes</span>.<span class="hljs-keyword">self</span>) &#123; context <span class="hljs-keyword">in</span><br>            <span class="hljs-comment">// 显示的内容</span><br>            <span class="hljs-type">SportActivityView</span>(name: context.attributes.name,<br>                               startDate: context.attributes.date,<br>                               amount: context.state.amount)<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">@main</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SportWidgets</span>: <span class="hljs-title class_">WidgetBundle</span> &#123;<br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">Widget</span> &#123;<br>        widgets()<br>    &#125;<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">widgets</span>() -&gt; <span class="hljs-keyword">some</span> <span class="hljs-type">Widget</span> &#123;<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">#available</span>(<span class="hljs-keyword">iOS</span> <span class="hljs-number">16.0</span>, <span class="hljs-operator">*</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-type">WidgetBundleBuilder</span>.buildBlock(<span class="hljs-type">SportWidget</span>(), <span class="hljs-type">SportActivityWidget</span>())<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 只有原来的Widget</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-type">SportWidget</span>()<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>主项目 UIViewController 源文件：配置、启动、更新与终止 Live Activity。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> ActivityKit<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-comment">// 运动量，用于更新Activity的数据</span><br>    <span class="hljs-keyword">var</span> amount: <span class="hljs-type">Double</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>    <span class="hljs-comment">// 定时器计数</span><br>    <span class="hljs-keyword">var</span> count <span class="hljs-operator">=</span> <span class="hljs-number">60</span><br>    <span class="hljs-comment">// 定时器</span><br>    <span class="hljs-keyword">var</span> timer: <span class="hljs-type">Timer</span>?<br>    <span class="hljs-comment">// Activity</span><br>    <span class="hljs-keyword">var</span> activity: <span class="hljs-type">Activity</span>&lt;<span class="hljs-type">SportActivityAttributes</span>&gt;?<br><br>    <span class="hljs-comment">// MARK：初始化参数</span><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">setup</span>() &#123;<br>        amount <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>        count <span class="hljs-operator">=</span> <span class="hljs-number">60</span><br>        <span class="hljs-comment">// 定时器更新Activity</span><br>        timer <span class="hljs-operator">=</span> <span class="hljs-type">Timer</span>.scheduledTimer(withTimeInterval: <span class="hljs-number">5</span>, repeats: <span class="hljs-literal">true</span>) &#123; <span class="hljs-keyword">_</span> <span class="hljs-keyword">in</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">self</span>.count <span class="hljs-operator">==</span> <span class="hljs-number">0</span> &#123;<br>                <span class="hljs-keyword">self</span>.timer<span class="hljs-operator">?</span>.invalidate()<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">self</span>.count <span class="hljs-operator">-=</span> <span class="hljs-number">5</span><br>            &#125;<br>            <span class="hljs-comment">// 修改数据</span><br>            <span class="hljs-keyword">self</span>.amount <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.amount <span class="hljs-operator">+</span> <span class="hljs-type">Double</span>.random(in: <span class="hljs-number">2.5</span> <span class="hljs-operator">...</span> <span class="hljs-number">25.0</span>)<br>            <br>            <span class="hljs-keyword">let</span> contentState <span class="hljs-operator">=</span> <span class="hljs-type">SportActivityAttributes</span>.<span class="hljs-type">ContentState</span>(amount: <span class="hljs-keyword">self</span>.amount)<br>            <span class="hljs-type">Task</span> &#123;<br>                <span class="hljs-keyword">await</span> <span class="hljs-keyword">self</span>.activity<span class="hljs-operator">?</span>.update(using: contentState)<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-comment">// 终止现有的Activity</span><br>        <span class="hljs-type">Task</span> &#123;<br>            <span class="hljs-keyword">for</span> activity <span class="hljs-keyword">in</span> <span class="hljs-type">Activity</span>&lt;<span class="hljs-type">SportActivityAttributes</span>&gt;.activities &#123;<br>                <span class="hljs-keyword">await</span> activity.end()<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 监听某个Activity的启动</span><br>        <span class="hljs-type">Task</span> &#123;<br>            <span class="hljs-keyword">let</span> activities <span class="hljs-operator">=</span> <span class="hljs-type">Activity</span>&lt;<span class="hljs-type">SportActivityAttributes</span>&gt;.activityUpdates<br>            <span class="hljs-comment">// 遍历所有的Activity</span><br>            <span class="hljs-keyword">for</span> <span class="hljs-keyword">await</span> activity <span class="hljs-keyword">in</span> activities &#123;<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;启动了Activity：<span class="hljs-subst">\(activity)</span>&quot;</span>)<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 启动Activity</span><br>    <span class="hljs-keyword">@IBAction</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">startActivity</span>() &#123;<br>        setup()<br><br>        <span class="hljs-keyword">let</span> attributes <span class="hljs-operator">=</span> <span class="hljs-type">SportActivityAttributes</span>(date: .now, name: <span class="hljs-string">&quot;跑步&quot;</span>)<br>        <span class="hljs-keyword">let</span> contentState <span class="hljs-operator">=</span> <span class="hljs-type">SportActivityAttributes</span>.<span class="hljs-type">ContentState</span>(amount: amount)<br>        <span class="hljs-keyword">do</span> &#123;<br>            activity <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">Activity</span>&lt;<span class="hljs-type">SportActivityAttributes</span>&gt;.request(attributes: attributes,<br>                                                                      contentState: contentState,<br>                                                                      pushType: <span class="hljs-literal">nil</span>)<br>        &#125; <span class="hljs-keyword">catch</span> &#123;<br>            <span class="hljs-built_in">print</span>(error.localizedDescription)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 更新Activity</span><br>    <span class="hljs-keyword">@IBAction</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">updateActivity</span>() &#123;<br>        amount <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>        <br>        <span class="hljs-keyword">let</span> contentState <span class="hljs-operator">=</span> <span class="hljs-type">SportActivityAttributes</span>.<span class="hljs-type">ContentState</span>(amount: amount)<br>        <span class="hljs-type">Task</span> &#123;<br>            <span class="hljs-keyword">await</span> <span class="hljs-keyword">self</span>.activity<span class="hljs-operator">?</span>.update(using: contentState)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 结束Activity</span><br>    <span class="hljs-keyword">@IBAction</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">endActivity</span>() &#123;<br>        timer<span class="hljs-operator">?</span>.invalidate()<br>        timer <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span><br><br>        <span class="hljs-type">Task</span> &#123;<br>            <span class="hljs-keyword">await</span> <span class="hljs-keyword">self</span>.activity<span class="hljs-operator">?</span>.end(using: <span class="hljs-literal">nil</span>, dismissalPolicy: .immediate)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：锁屏状态下执行 Timer 需要打开后台模式。通过项目的 <strong>Signing&amp;Capabilities</strong> 添加 <strong>Capability</strong>，找到并开启 <strong>Background Modes</strong>，然后在 <strong>Background Modes</strong> 中勾选 <strong>Audio, AirPlay, and Picture in Picture</strong>。</p></blockquote><h3 id="融合SwiftUI"><a href="#融合SwiftUI" class="headerlink" title="融合SwiftUI"></a>融合SwiftUI</h3><p>UIKit 进一步融合 SwiftUI，除了前面讲解的 UITableView 与 UICollectionView 新特性，SwiftUI 还可以在 UIKit 中进入如下的操作。</p><ul><li>以 popover 形式弹出 SwiftUI。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-comment">// MARK: - SwiftUI</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SharedView</span>: <span class="hljs-title class_">View</span> &#123;<br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> &#123;<br>        <span class="hljs-type">VStack</span>(alignment: .center, spacing: <span class="hljs-number">10</span>) &#123;<br>            <span class="hljs-type">ShareLink</span>(item: <span class="hljs-type">URL</span>(string: <span class="hljs-string">&quot;https://weixin.qq.com&quot;</span>)<span class="hljs-operator">!</span>) &#123;<br>                <span class="hljs-type">Label</span>(<span class="hljs-string">&quot;微信分享&quot;</span>, systemImage: <span class="hljs-string">&quot;ellipsis.message.fill&quot;</span>)<br>            &#125;<br><br>            <span class="hljs-type">ShareLink</span>(item: <span class="hljs-type">URL</span>(string: <span class="hljs-string">&quot;https://weibo.com&quot;</span>)<span class="hljs-operator">!</span>) &#123;<br>                <span class="hljs-type">Label</span>(<span class="hljs-string">&quot;微博分享&quot;</span>, systemImage: <span class="hljs-string">&quot;square.and.arrow.up.fill&quot;</span>)<br>            &#125;<br>        &#125;<br>        .padding(<span class="hljs-number">20</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UIKit</span><br><span class="hljs-comment">// MARK: - UIViewController</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">lazy</span> <span class="hljs-keyword">var</span> button: <span class="hljs-type">UIButton</span> <span class="hljs-operator">=</span> &#123;<br>        <span class="hljs-keyword">var</span> config <span class="hljs-operator">=</span> <span class="hljs-type">UIButton</span>.<span class="hljs-type">Configuration</span>.filled()<br>        config.title <span class="hljs-operator">=</span> <span class="hljs-string">&quot;自定义弹出&quot;</span><br>        config.baseForegroundColor <span class="hljs-operator">=</span> .white<br>        config.background.backgroundColor <span class="hljs-operator">=</span> .systemBlue<br>        config.background.cornerRadius <span class="hljs-operator">=</span> <span class="hljs-number">10</span><br>        config.contentInsets <span class="hljs-operator">=</span> .<span class="hljs-keyword">init</span>(top: <span class="hljs-number">10</span>, leading: <span class="hljs-number">20</span>, bottom: <span class="hljs-number">10</span>, trailing: <span class="hljs-number">20</span>)<br>        <span class="hljs-keyword">let</span> button <span class="hljs-operator">=</span> <span class="hljs-type">UIButton</span>(configuration: config)<br>        button.sizeToFit()<br>        button.center <span class="hljs-operator">=</span> view.center<br>        button.addTarget(<span class="hljs-keyword">self</span>, action: <span class="hljs-keyword">#selector</span>(popover), for: .touchUpInside)<br>        <span class="hljs-keyword">return</span> button<br>    &#125;()<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        view.addSubview(button)<br>    &#125;<br><br>    <span class="hljs-comment">// MARK: 弹出popover</span><br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">popover</span>() &#123;<br>        <span class="hljs-comment">// SwiftUI</span><br>        <span class="hljs-keyword">let</span> sharedView <span class="hljs-operator">=</span> <span class="hljs-type">SharedView</span>()<br>        <span class="hljs-keyword">let</span> hostingController <span class="hljs-operator">=</span> <span class="hljs-type">UIHostingController</span>(rootView: sharedView)<br>        <span class="hljs-comment">// iOS16新增，设置尺寸选项</span><br>        hostingController.sizingOptions <span class="hljs-operator">=</span> .preferredContentSize<br>        hostingController.modalPresentationStyle <span class="hljs-operator">=</span> .popover<br>        <span class="hljs-keyword">let</span> popover <span class="hljs-operator">=</span> hostingController.popoverPresentationController<span class="hljs-operator">!</span><br>        popover.delegate <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span><br>        popover.sourceView <span class="hljs-operator">=</span> button<br>        popover.permittedArrowDirections <span class="hljs-operator">=</span> [.down]<br>        popover.sourceRect <span class="hljs-operator">=</span> button.bounds<br>        present(hostingController, animated: <span class="hljs-literal">true</span>, completion: <span class="hljs-literal">nil</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UIPopoverPresentationControllerDelegate</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIPopoverPresentationControllerDelegate</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">adaptivePresentationStyle</span>(<span class="hljs-params">for</span> <span class="hljs-params">controller</span>: <span class="hljs-type">UIPresentationController</span>) -&gt; <span class="hljs-type">UIModalPresentationStyle</span> &#123;<br>        <span class="hljs-keyword">return</span> .none<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>传递 ObservableObject 以更新 SwiftUI。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-comment">// MARK: - ObservableObject</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span>: <span class="hljs-title class_">ObservableObject</span> &#123;<br>    <span class="hljs-meta">@Published</span> <span class="hljs-keyword">var</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-meta">@Published</span> <span class="hljs-keyword">var</span> address <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><br><br>    <span class="hljs-keyword">init</span>(<span class="hljs-params">name</span>: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-params">address</span>: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>) &#123;<br>        <span class="hljs-keyword">self</span>.name <span class="hljs-operator">=</span> name<br>        <span class="hljs-keyword">self</span>.address <span class="hljs-operator">=</span> address<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - SwiftUI</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">UserView</span>: <span class="hljs-title class_">View</span> &#123;<br>    <span class="hljs-meta">@ObservedObject</span> <span class="hljs-keyword">var</span> user: <span class="hljs-type">User</span><br><br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> &#123;<br>        <span class="hljs-type">Text</span>(user.name)<br>            .foregroundStyle(.tint)<br>            .font(.title)<br><br>        <span class="hljs-type">Text</span>(user.address)<br>            .font(.subheadline)<br>            .foregroundStyle(.purple)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - UIKit</span><br><span class="hljs-comment">// MARK: - UIViewController</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">let</span> user: <span class="hljs-type">User</span><br>    <span class="hljs-keyword">let</span> hostingController: <span class="hljs-type">UIHostingController</span>&lt;<span class="hljs-type">UserView</span>&gt;<br><br>    <span class="hljs-keyword">init</span>(<span class="hljs-params">user</span>: <span class="hljs-type">User</span>) &#123;<br>        <span class="hljs-keyword">self</span>.user <span class="hljs-operator">=</span> user<br>        <span class="hljs-keyword">let</span> userView <span class="hljs-operator">=</span> <span class="hljs-type">UserView</span>(user: user)<br>        hostingController <span class="hljs-operator">=</span> <span class="hljs-type">UIHostingController</span>(rootView: userView)<br><br>        <span class="hljs-keyword">super</span>.<span class="hljs-keyword">init</span>(nibName: <span class="hljs-literal">nil</span>, bundle: <span class="hljs-literal">nil</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        addChild(hostingController)<br>        view.addSubview(hostingController.view)<br>        <span class="hljs-comment">// 增加约束</span><br>        hostingController.view.translatesAutoresizingMaskIntoConstraints <span class="hljs-operator">=</span> <span class="hljs-literal">false</span><br>        <span class="hljs-type">NSLayoutConstraint</span>.activate([<br>            hostingController.view.topAnchor.constraint(equalTo: view.topAnchor),<br>            hostingController.view.leftAnchor.constraint(equalTo: view.leftAnchor),<br>            hostingController.view.bottomAnchor.constraint(equalTo: view.bottomAnchor),<br>            hostingController.view.rightAnchor.constraint(equalTo: view.rightAnchor)])<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-comment">// 改变数据，界面内容发生变化</span><br>        user.name <span class="hljs-operator">=</span> <span class="hljs-string">&quot;李四&quot;</span><br>        user.address <span class="hljs-operator">=</span> <span class="hljs-string">&quot;江苏南京&quot;</span><br>    &#125;<br><br>    <span class="hljs-keyword">required</span> <span class="hljs-keyword">init?</span>(<span class="hljs-params">coder</span>: <span class="hljs-type">NSCoder</span>) &#123;<br>        <span class="hljs-built_in">fatalError</span>(<span class="hljs-string">&quot;init(coder:) has not been implemented&quot;</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// MARK: - SceneDelegate</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SceneDelegate</span>: <span class="hljs-title class_">UIResponder</span>, <span class="hljs-title class_">UIWindowSceneDelegate</span> &#123;<br>    <span class="hljs-keyword">var</span> window: <span class="hljs-type">UIWindow</span>?<br><br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">scene</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">scene</span>: <span class="hljs-type">UIScene</span>,<br>               <span class="hljs-params">willConnectTo</span> <span class="hljs-params">session</span>: <span class="hljs-type">UISceneSession</span>,<br>               <span class="hljs-params">options</span> <span class="hljs-params">connectionOptions</span>: <span class="hljs-type">UIScene</span>.<span class="hljs-type">ConnectionOptions</span>) &#123;<br>        <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> windowScene <span class="hljs-operator">=</span> (scene <span class="hljs-keyword">as?</span> <span class="hljs-type">UIWindowScene</span>) <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">return</span> &#125;<br>        window <span class="hljs-operator">=</span> <span class="hljs-type">UIWindow</span>(windowScene: windowScene)<br>        window<span class="hljs-operator">?</span>.rootViewController <span class="hljs-operator">=</span> <span class="hljs-type">ViewController</span>(user: <span class="hljs-type">User</span>(name: <span class="hljs-string">&quot;张三&quot;</span>, address: <span class="hljs-string">&quot;安徽芜湖&quot;</span>))<br>        window<span class="hljs-operator">?</span>.makeKeyAndVisible()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>UIScrollView 的属性<code>keyboardDismissMode</code>增加了 2 个新的选项<code>onDragWithAccessory</code>与<code>interactiveWithAccessory</code>，表示相应操作时不仅可以退键盘还能退键盘对应的 Accessory。</li><li>打开系统通知设置界面的 URL Scheme 从<br><code>UIApplicationOpenNotificationSettingsURLString</code>替换为<code>openNotificationSettingsURLString</code>。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">touchesBegan</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">touches</span>: <span class="hljs-type">Set</span>&lt;<span class="hljs-type">UITouch</span>&gt;, <span class="hljs-params">with</span> <span class="hljs-params">event</span>: <span class="hljs-type">UIEvent</span>?) &#123;<br>        <span class="hljs-comment">// 新的通知设置URL Scheme</span><br>        <span class="hljs-keyword">let</span> urlString <span class="hljs-operator">=</span> <span class="hljs-type">UIApplication</span>.openNotificationSettingsURLString<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-type">URL</span>(string: urlString), <span class="hljs-type">UIApplication</span>.shared.canOpenURL(url) &#123;<br>            <span class="hljs-type">UIApplication</span>.shared.open(url, options: [:], completionHandler: <span class="hljs-literal">nil</span>)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>UIScreen.main</code>即将被废弃，建议使用<code>(UIApplication.shared.connectedScenes.first as? UIWindowScene)?.screen</code>。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ViewController</span>: <span class="hljs-title class_">UIViewController</span> &#123;<br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">viewDidLoad</span>() &#123;<br>        <span class="hljs-keyword">super</span>.viewDidLoad()<br><br>        <span class="hljs-comment">// 新的获取UIScreen尺寸的方法</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> screen <span class="hljs-operator">=</span> (<span class="hljs-type">UIApplication</span>.shared.connectedScenes.first <span class="hljs-keyword">as?</span> <span class="hljs-type">UIWindowScene</span>)<span class="hljs-operator">?</span>.screen &#123;<br>            <span class="hljs-built_in">print</span>(screen)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
